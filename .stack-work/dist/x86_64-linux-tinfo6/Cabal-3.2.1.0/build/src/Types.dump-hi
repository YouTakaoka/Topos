
==================== FINAL INTERFACE ====================
2021-04-09 04:56:42.4029157 UTC

interface Topos-0.1.0.0-L2hSunVxFDyol1qAzNo2F:Types 8104
  interface hash: 54ae6c3ad42f2a493e029fb0d06d7acf
  ABI hash: 2870f235e2eecb0b3d25891749dd9b60
  export-list hash: fb3343c70ce167cabb463f2e586dc9ec
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 358a18e1043fc7ac1b015a88503b1325
  opt_hash: cb09a535710eb16767a299f2ded44a31
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Types.typeEq
  Types.BinaryOp
  Types.Bind{Types.Bind identifier value vtype}
  Types.EvalMode{Types.M_Normal Types.M_TypeCheck}
  Types.Exp
  Types.Func{Types.Fun Types.Operator}
  Types.Function{Types.Function args ret ret_t}
  Types.FunctionOp
  Types.Op{Types.BinOp Types.FuncOp Types.UnOp}
  Types.StrOp
  Types.T_Func{Types.T_Function Types.T_Operator args_t return_t}
  Types.Type{Types.T_Any Types.T_BinaryOp Types.T_Bool Types.T_Double Types.T_EmptyList Types.T_Error Types.T_Func Types.T_FunctionOp Types.T_Int Types.T_List Types.T_PreList Types.T_Print Types.T_String Types.T_Tuple Types.T_Type Types.T_TypeCheck Types.T_UnaryOp Types.T_Unknown}
  Types.UnaryOp
  Types.Wrd{Types.Bnd Types.Bool Types.Contents Types.Double Types.Err Types.Func Types.Int Types.List Types.Null Types.Pair Types.PreList Types.Print Types.Str Types.ToEval Types.Tobe Types.Tuple Types.Type Types.TypeCheck}
module dependencies:
package dependencies: base-4.14.1.0* ghc-prim-0.6.1
                      integer-gmp-1.0.3.0
orphans: base-4.14.1.0:GHC.Float base-4.14.1.0:GHC.Base
family instance modules: base-4.14.1.0:Control.Applicative
                         base-4.14.1.0:Control.Arrow base-4.14.1.0:Data.Functor.Const
                         base-4.14.1.0:Data.Functor.Identity base-4.14.1.0:Data.Monoid
                         base-4.14.1.0:Data.Semigroup.Internal base-4.14.1.0:GHC.Generics
                         base-4.14.1.0:GHC.IO.Exception
import  -/  base-4.14.1.0:GHC.Base ede51775731a544ddfcb02b5a427fd38
import  -/  base-4.14.1.0:GHC.Show 57e93b26a19b08606d2ae3a6ff8065f2
import  -/  base-4.14.1.0:Prelude 5c84dfddbb8583fc340ecd15bead164a
import  -/  ghc-prim-0.6.1:GHC.Classes e50fb3f1cbf74ce4d3874442e4300a09
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind :: GHC.Classes.Eq Types.Bind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Bind Types.$fEqBind_$c== Types.$fEqBind_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c/= :: Types.Bind -> Types.Bind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Bind) (y :: Types.Bind) ->
                 case Types.$fEqBind_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c== :: Types.Bind -> Types.Bind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Bind) (w1 :: Types.Bind) ->
                 case w of ww { Types.Bind ww1 ww2 ww3 ->
                 case w1 of ww4 { Types.Bind ww5 ww6 ww7 ->
                 Types.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c==1 :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c==2 :: Types.Wrd -> Types.Wrd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction :: GHC.Classes.Eq Types.Function
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Function Types.$fEqFunction_$c== Types.$fEqFunction_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$c/= ::
    Types.Function -> Types.Function -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Function) (y :: Types.Function) ->
                 case Types.$fEqFunction_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$c== ::
    Types.Function -> Types.Function -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Function) (w1 :: Types.Function) ->
                 case w of ww { Types.Function ww1 ww2 ww3 ->
                 case w1 of ww4 { Types.Function ww5 ww6 ww7 ->
                 Types.$w$c==1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$s$fEq(,) ::
    GHC.Classes.Eq (Types.Type, [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Types.Type, [GHC.Types.Char])
                  (GHC.Classes.$fEq(,)_$c==
                     @ Types.Type
                     @ [GHC.Types.Char]
                     Types.$fEqType
                     GHC.Classes.$fEq[]_$s$fEq[]1)
                  Types.$fEqFunction_$s$fEq(,)_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$s$fEq(,)_$c/= ::
    (Types.Type, [GHC.Types.Char])
    -> (Types.Type, [GHC.Types.Char]) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (Types.Type, [GHC.Types.Char]))
                   (y :: (Types.Type, [GHC.Types.Char])) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case Types.$fEqBind_$c==1 a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqT_Func :: GHC.Classes.Eq Types.T_Func
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.T_Func Types.$fEqT_Func_$c== Types.$fEqT_Func_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqT_Func_$c/= :: Types.T_Func -> Types.T_Func -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.T_Func) (y :: Types.T_Func) ->
                 case Types.$fEqT_Func_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqT_Func_$c== :: Types.T_Func -> Types.T_Func -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Types.T_Func) (ds1 :: Types.T_Func) ->
                 case ds of wild {
                   Types.T_Function ds2 ds3
                   -> case ds1 of wild1 {
                        Types.T_Function ds4 ds5
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Types.Type
                                  Types.$fEqType
                                  ds2
                                  ds4 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> Types.$fEqBind_$c==1 ds3 ds5 }
                        Types.T_Operator ipv -> GHC.Types.False }
                   Types.T_Operator ds2
                   -> case ds2 of wild1 { (,) s1 ds3 ->
                      case ds1 of wild2 {
                        Types.T_Function ipv ipv1 -> GHC.Types.False
                        Types.T_Operator ds4
                        -> case ds4 of wild3 { (,) s2 ds5 ->
                           GHC.Base.eqString s1 s2 } } } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqType :: GHC.Classes.Eq Types.Type
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type Types.$fEqBind_$c==1 Types.$fEqType_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqType_$c/= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqWrd :: GHC.Classes.Eq Types.Wrd
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Wrd Types.$fEqBind_$c==2 Types.$fEqWrd_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqWrd_$c/= :: Types.Wrd -> Types.Wrd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Wrd) (y :: Types.Wrd) ->
                 case Types.$fEqBind_$c==2 x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType :: GHC.Classes.Ord Types.Type
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type
                  Types.$fEqType
                  Types.$fOrdType_$ccompare
                  Types.$fOrdType_$c<
                  Types.$fOrdType_$c<=
                  Types.$fOrdType_$c>
                  Types.$fOrdType_$c>=
                  Types.$fOrdType_$cmax
                  Types.$fOrdType_$cmin -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c< :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.False Types.T_Any -> GHC.Types.True }
                                  Types.T_Any -> GHC.Types.True }
                             Types.T_Unknown -> GHC.Types.False }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT -> Types.$fEqBind_$c==1 Types.T_EmptyList wild2
                             Types.T_List ds -> GHC.Types.True
                             Types.T_Unknown -> GHC.Types.False
                             Types.T_Any -> GHC.Types.True }
                        Types.T_Unknown -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c<= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Type) (ds1 :: Types.Type) ->
                 case ds of wild {
                   DEFAULT
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT -> Types.$fEqBind_$c==1 wild2 wild3
                                  Types.T_Any -> GHC.Types.True }
                             Types.T_Any -> GHC.Types.True }
                        Types.T_Unknown -> GHC.Types.False }
                   Types.T_EmptyList
                   -> case ds1 of wild1 {
                        DEFAULT -> Types.$fEqBind_$c==1 Types.T_EmptyList wild1
                        Types.T_List ds2 -> GHC.Types.True
                        Types.T_Unknown -> GHC.Types.False
                        Types.T_Any -> GHC.Types.True }
                   Types.T_Unknown -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c> :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.True Types.T_Any -> GHC.Types.False }
                                  Types.T_Any -> GHC.Types.False }
                             Types.T_Unknown -> GHC.Types.True }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT
                             -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild2 of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             Types.T_List ds -> GHC.Types.False
                             Types.T_Unknown -> GHC.Types.True
                             Types.T_Any -> GHC.Types.False }
                        Types.T_Unknown -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c>= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.True Types.T_Any -> GHC.Types.False }
                                  Types.T_Any -> GHC.Types.False }
                             Types.T_Unknown -> GHC.Types.True }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT
                             -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild2 of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             Types.T_List ds -> GHC.Types.False
                             Types.T_Unknown -> GHC.Types.True
                             Types.T_Any -> GHC.Types.False }
                        Types.T_Unknown -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.True }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$ccompare ::
    Types.Type -> Types.Type -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.GT Types.T_Any -> GHC.Types.LT }
                                  Types.T_Any -> GHC.Types.LT }
                             Types.T_Unknown -> GHC.Types.GT }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT
                             -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild2 of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.LT }
                             Types.T_List ds -> GHC.Types.LT
                             Types.T_Unknown -> GHC.Types.GT
                             Types.T_Any -> GHC.Types.LT }
                        Types.T_Unknown -> GHC.Types.GT }
                   GHC.Types.True -> GHC.Types.EQ }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$cmax :: Types.Type -> Types.Type -> Types.Type
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (x :: Types.Type) (y :: Types.Type) ->
                 case x of wild {
                   DEFAULT
                   -> case y of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case Types.$fEqBind_$c==1 wild2 wild3 of wild4 {
                                       GHC.Types.False -> wild2 GHC.Types.True -> wild3 }
                                  Types.T_Any -> Types.T_Any }
                             Types.T_Any -> wild1 }
                        Types.T_Unknown -> wild }
                   Types.T_EmptyList
                   -> case y of wild1 {
                        DEFAULT
                        -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild1 of wild2 {
                             GHC.Types.False -> Types.T_EmptyList GHC.Types.True -> wild1 }
                        Types.T_List ds -> wild1
                        Types.T_Unknown -> Types.T_EmptyList
                        Types.T_Any -> Types.T_Any }
                   Types.T_Unknown -> Types.T_Unknown }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$cmin :: Types.Type -> Types.Type -> Types.Type
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Types.Type) (y :: Types.Type) ->
                 case x of wild {
                   DEFAULT
                   -> case y of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case Types.$fEqBind_$c==1 wild2 wild3 of wild4 {
                                       GHC.Types.False -> wild3 GHC.Types.True -> wild2 }
                                  Types.T_Any -> wild2 }
                             Types.T_Any -> Types.T_Any }
                        Types.T_Unknown -> Types.T_Unknown }
                   Types.T_EmptyList
                   -> case y of wild1 {
                        DEFAULT
                        -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild1 of wild2 {
                             GHC.Types.False -> wild1 GHC.Types.True -> Types.T_EmptyList }
                        Types.T_List ds -> Types.T_EmptyList
                        Types.T_Unknown -> Types.T_Unknown
                        Types.T_Any -> Types.T_EmptyList }
                   Types.T_Unknown -> y }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind :: GHC.Show.Show Types.Bind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Bind
                  Types.$fShowBind_$cshowsPrec
                  Types.$fShowBind_$cshow1
                  Types.$fShowBind_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind1 :: Types.Bind -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowBind_$cshowsPrec Types.$fShowBind2) -}
5a7823d2743a4e3c77862677b7b8e4eb
  $fShowBind2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
94f60b552ae455060d3a8bb1d35adf2d
  $fShowBind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
a4601f043f0b376cae7ac25141e3ef3f
  $fShowBind4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vtype = "#) -}
95134c0cc765f79a146fb7020fd5bb9d
  $fShowBind5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("value = "#) -}
c5fffa51bd1f86316d693afe6231ad72
  $fShowBind6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("identifier = "#) -}
ffe3bcdb508f0875d7cc329d77e92859
  $fShowBind7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bind {"#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshow :: Types.Wrd -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshow1 :: Types.Bind -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Bind) ->
                 Types.$fShowBind_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshowList :: [Types.Bind] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Bind]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Bind Types.$fShowBind1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshowsPrec ::
    GHC.Types.Int -> Types.Bind -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(U,1*U,1*U)>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Bind) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Bind ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec ww1 ww3 ww4 ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshowsPrec1 ::
    GHC.Types.Int -> Types.Type -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc :: GHC.Show.Show Types.Func
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Func
                  Types.$fShowFunc_$cshowsPrec
                  Types.$fShowFunc_$cshow
                  Types.$fShowFunc_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc1 :: Types.Func -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowFunc_$cshowsPrec Types.$fShowBind2) -}
a590975f86371c436ee56fadbf546c64
  $fShowFunc10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc11) -}
fec7a128c405c9c4a5616d248de88642
  $fShowFunc11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Fun "#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc2 :: Types.Op -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (x :: Types.Op) (s :: GHC.Base.String)[OneShot] ->
                 case x of wild {
                   Types.BinOp ds -> GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc7 s
                   Types.UnOp ds -> GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc5 s
                   Types.FuncOp ds
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc3 s }) -}
53c36187a5bc8bda4d08337458c24773
  $fShowFunc3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc4) -}
5c3d50b387ea2d856d6ef521c01b6fc8
  $fShowFunc4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[FuncOp]"#) -}
ed51949c4d7d77cac4e9c55ad151c589
  $fShowFunc5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc6) -}
8ca568655c745ddb23a0ce8d15b06af5
  $fShowFunc6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[UnOp]"#) -}
45a619cf6e1316364f7421064b3bc684
  $fShowFunc7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc8) -}
9250b59ab7b6b77c0727b6751ae8886f
  $fShowFunc8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[BinOp]"#) -}
aed3775169f1f85f58368cc7187ab250
  $fShowFunc9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Operator "#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc_$cshow :: Types.Func -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Func) ->
                 Types.$fShowFunc_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc_$cshowList :: [Types.Func] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Func]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Func Types.$fShowFunc1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc_$cshowsPrec ::
    GHC.Types.Int -> Types.Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Func) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$cshowsPrec1 ww1 w1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction :: GHC.Show.Show Types.Function
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Function
                  Types.$fShowFunction_$cshowsPrec
                  Types.$fShowFunction_$cshow
                  Types.$fShowFunction_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction1 :: Types.Function -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U)>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowFunction_$cshowsPrec Types.$fShowBind2) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction_$cshow :: Types.Function -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Function) ->
                 Types.$fShowFunction_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction_$cshowList :: [Types.Function] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Function]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Function Types.$fShowFunction1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction_$cshowsPrec ::
    GHC.Types.Int -> Types.Function -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(U,1*U,U)>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Function) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Function ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec2 ww1 ww3 ww4 ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp :: GHC.Show.Show Types.Op
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Op
                  Types.$fShowOp_$cshowsPrec
                  Types.$fShowOp_$cshow
                  Types.$fShowOp_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp_$cshow :: Types.Op -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Op) ->
                 case ds of wild {
                   Types.BinOp ds1 -> Types.$fShowFunc7
                   Types.UnOp ds1 -> Types.$fShowFunc5
                   Types.FuncOp ds1 -> Types.$fShowFunc3 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp_$cshowList :: [Types.Op] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Op]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Op Types.$fShowFunc2 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp_$cshowsPrec :: GHC.Types.Int -> Types.Op -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Op) (w2 :: GHC.Base.String) ->
                 Types.$fShowFunc2 w1 w2) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func :: GHC.Show.Show Types.T_Func
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.T_Func
                  Types.$fShowT_Func_$cshowsPrec
                  Types.$fShowT_Func_$cshow
                  Types.$fShowT_Func_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func1 :: Types.T_Func -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowT_Func_$cshowsPrec Types.$fShowBind2) -}
aa2ae05d481b337fbb5bb7f575c7f60f
  $fShowT_Func2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T_Operator "#) -}
6f9a28bb2e4df96ad1a678b5773dce89
  $fShowT_Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("return_t = "#) -}
e896eaf4f90364ecfb26dc4d3dc32e66
  $fShowT_Func4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("args_t = "#) -}
3b042bb9ab2cb9cc47b1500beb322d90
  $fShowT_Func5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T_Function {"#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func_$cshow :: Types.T_Func -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.T_Func) ->
                 Types.$fShowT_Func_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func_$cshowList :: [Types.T_Func] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.T_Func]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.T_Func Types.$fShowT_Func1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func_$cshowsPrec ::
    GHC.Types.Int -> Types.T_Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.T_Func) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$cshowsPrec3 ww1 w1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType :: GHC.Show.Show Types.Type
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type
                  Types.$fShowBind_$cshowsPrec1
                  Types.$fShowType_$cshow
                  Types.$fShowType_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType1 :: Types.Type -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowBind_$cshowsPrec1 Types.$fShowBind2) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType_$cshow :: Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Type) ->
                 Types.$fShowBind_$cshowsPrec1
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType_$cshowList :: [Types.Type] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Type]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Type Types.$fShowType1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd :: GHC.Show.Show Types.Wrd
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Wrd
                  Types.$fShowWrd_$cshowsPrec
                  Types.$fShowBind_$cshow
                  Types.$fShowWrd_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd1 :: Types.Wrd -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Wrd) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Types.$fShowBind_$cshow x))
                   s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd_$cshowList :: [Types.Wrd] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Wrd]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Wrd Types.$fShowWrd1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd_$cshowsPrec ::
    GHC.Types.Int -> Types.Wrd -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int) (x :: Types.Wrd) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Types.$fShowBind_$cshow x))
                   s) -}
977c61b650d635c4770ec912c6518a8a
  $tc'BinOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6015880260986517920##
                   16280163809749895704##
                   Types.$trModule
                   Types.$tc'BinOp2
                   0#
                   Types.$tc'BinOp1) -}
23a21ce6e422f00e352daf343d978916
  $tc'BinOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2453be85e70690dc0249b74068f0ebfe
  $tc'BinOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'BinOp3) -}
17a9d980bf72d5b9d7af6a5e1869c052
  $tc'BinOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BinOp"#) -}
eaa5d05f3c46b1b1c9667bf28b3281dc
  $tc'Bind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   905725890985166590##
                   5982301043167257467##
                   Types.$trModule
                   Types.$tc'Bind2
                   0#
                   Types.$tc'Bind1) -}
9e0d4e09d3c7ddc63c4a930f39cb38f9
  $tc'Bind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cafb127dc80bc68becb157039c946d06
  $tc'Bind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bind3) -}
e0c69056d6655769f5a839521c6e3a63
  $tc'Bind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bind"#) -}
1ff4a6b0e4a768959ae0c18accb72516
  $tc'Bnd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13462670928313550182##
                   3788395879286105584##
                   Types.$trModule
                   Types.$tc'Bnd2
                   0#
                   Types.$tc'Bnd1) -}
33a9d7fa8db4bf54ce60c3145ecfcb17
  $tc'Bnd1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d87e6f3a9347d3a938a8d9cd0da92c70
  $tc'Bnd2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bnd3) -}
873288b56e0d21b593ccc80011841873
  $tc'Bnd3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bnd"#) -}
667fffa8d32f74b839c1f2f7505390b1
  $tc'Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8628615960431750330##
                   6260131625115277915##
                   Types.$trModule
                   Types.$tc'Bool2
                   0#
                   Types.$tc'Bool1) -}
48be26028c91945edece3f171eb8ce7e
  $tc'Bool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
734a3664629053b225ba965d10c92f2d
  $tc'Bool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bool3) -}
4fe38e896f7856386753b1559e1369f7
  $tc'Bool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bool"#) -}
bd875b02a7e30d6d676f888ea6f52266
  $tc'Contents :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17704272973244702080##
                   17764196043691043238##
                   Types.$trModule
                   Types.$tc'Contents2
                   0#
                   Types.$tc'Contents1) -}
6d7d04f40859ef6a170afd1f5dae8533
  $tc'Contents1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a1c874eec127fcc149e8850c571eea78
  $tc'Contents2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Contents3) -}
186587825cd35c38dc36cc081a58a2cb
  $tc'Contents3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Contents"#) -}
e1e40a0a0907d195d73098cf10551c04
  $tc'Double :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11435271415407178034##
                   7857054183322747807##
                   Types.$trModule
                   Types.$tc'Double2
                   0#
                   Types.$tc'Double1) -}
2db453a3c45c30972e968d8f079e6674
  $tc'Double1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d909f987e2a6af5b6049da89f5765f4f
  $tc'Double2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Double3) -}
88268fbae4a68de108a890dfbed3dbfa
  $tc'Double3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Double"#) -}
4b7efa8076e1efe4f8d6da9d158cf8e7
  $tc'Err :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15324982601386776800##
                   2467311628084232170##
                   Types.$trModule
                   Types.$tc'Err2
                   0#
                   Types.$tc'Err1) -}
7447973d62eb2c4ee3519cba9bcd7b66
  $tc'Err1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b38dbcce934815a8d5540c0bf6ad3824
  $tc'Err2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Err3) -}
93dfec9be53e5af30d9164fedb6916ba
  $tc'Err3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Err"#) -}
d0c66f357dd43529fbd4d90ff8df10c8
  $tc'Fun :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17819113441279016260##
                   2769066126750201674##
                   Types.$trModule
                   Types.$tc'Fun2
                   0#
                   Types.$tc'Fun1) -}
f1f947964010ba21469e9de235ebb186
  $tc'Fun1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4ea72e1235af53fe8a651b36d5fafad0
  $tc'Fun2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Fun3) -}
677f616b201f815fa578765a32a50400
  $tc'Fun3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Fun"#) -}
ebd2720763d46558da7561b585fe2d95
  $tc'Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14331745464510730054##
                   2007563430656067699##
                   Types.$trModule
                   Types.$tc'Func2
                   0#
                   Types.$tc'Func1) -}
c818274072e1ec75875c5d302a4fbbd2
  $tc'Func1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a13e0d116da1b1112d2dcd82e1c4e6ff
  $tc'Func2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Func3) -}
220aa05e341bc4598dcafb1bb9097cdf
  $tc'Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Func"#) -}
c15efa046f1abece05d106a91d244b96
  $tc'FuncOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1482825743404429042##
                   4096580196452191038##
                   Types.$trModule
                   Types.$tc'FuncOp2
                   0#
                   Types.$tc'FuncOp1) -}
c44c8037a87779956e80fa27bd19ff09
  $tc'FuncOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c10175da798f981e265a9705a93316c8
  $tc'FuncOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'FuncOp3) -}
13e8f80c2d6285cb13c671b72538b61a
  $tc'FuncOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FuncOp"#) -}
420807dc29e7d173507796586bae988e
  $tc'Function :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2575662467142521799##
                   5927948232878927306##
                   Types.$trModule
                   Types.$tc'Function2
                   0#
                   Types.$tc'Function1) -}
b643770e58f09af477a88a13f08a5c35
  $tc'Function1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9abe499fd21209c27b6b1739a6b980bf
  $tc'Function2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Function3) -}
91e195c125d34a9b1ae7915efa470a73
  $tc'Function3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Function"#) -}
4a0bc234ce4a278c0cb87876c2a7926a
  $tc'Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5956295868865712181##
                   15584281385755000866##
                   Types.$trModule
                   Types.$tc'Int2
                   0#
                   Types.$tc'Int1) -}
cd23fe7974ede33df8e94f7731332700
  $tc'Int1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0f243630d3d66a230855fe041185dbc7
  $tc'Int2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Int3) -}
2eab4eaec38e83898a2cc3d38de976b1
  $tc'Int3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int"#) -}
91272903f1fcf1243a11625d90e2e674
  $tc'List :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10987121217369508200##
                   16129228708118249748##
                   Types.$trModule
                   Types.$tc'List1
                   0#
                   Types.$tc'Contents1) -}
44c6355a58eeeaa49c153f3ba0fc3acc
  $tc'List1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'List2) -}
5aaab2bafe01f388c3a32887b3b5ed8f
  $tc'List2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'List"#) -}
418f650c174d449c0b719fd79f4345a2
  $tc'M_Normal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18243668382090233946##
                   9859294163234212927##
                   Types.$trModule
                   Types.$tc'M_Normal2
                   0#
                   Types.$tc'M_Normal1) -}
e6dd9f31e2e3668f990a4cf5dc15ed60
  $tc'M_Normal1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
de47ea6c52abf8102f1155fd928fb554
  $tc'M_Normal2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'M_Normal3) -}
585f59fa3905e290ffa6a76f20e1c8ac
  $tc'M_Normal3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'M_Normal"#) -}
e9d511935f9e91dbd7e0a039da7c92d6
  $tc'M_TypeCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15815417160575012709##
                   4227702648409430606##
                   Types.$trModule
                   Types.$tc'M_TypeCheck1
                   0#
                   Types.$tc'M_Normal1) -}
fe505bf687962ec9cf8623e42ba1b43a
  $tc'M_TypeCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'M_TypeCheck2) -}
c294f10afa5ed86e3990757a127bc4a7
  $tc'M_TypeCheck2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'M_TypeCheck"#) -}
57469c10f4cdad07f1f4087f0d9156d6
  $tc'Null :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5370417249391373378##
                   16887846437629105356##
                   Types.$trModule
                   Types.$tc'Null2
                   0#
                   Types.$tc'Null1) -}
59279f21979cae8b606c31ee94407e06
  $tc'Null1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
5915b72e4c4924517d5c7a6d001f516b
  $tc'Null2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Null3) -}
a771f826d431893482659247135e0564
  $tc'Null3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Null"#) -}
364fee84a1288b6722e65deba7236c5e
  $tc'Operator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16329576879834367862##
                   17016153007017304145##
                   Types.$trModule
                   Types.$tc'Operator2
                   0#
                   Types.$tc'Operator1) -}
b2f6ac2c35336205af763fac4b34ad3c
  $tc'Operator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a4c3c7ec32f89be7e6c62261ff648fbc
  $tc'Operator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Operator3) -}
fd52fdc9eea2e4a4208ec755fafc998e
  $tc'Operator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Operator"#) -}
ed48b808c93c73f79dc5e86691aa5dc4
  $tc'Pair :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17870575352713640499##
                   17937338624154297629##
                   Types.$trModule
                   Types.$tc'Pair2
                   0#
                   Types.$tc'Pair1) -}
e7e91740e6d9516b6d8b280dd9d11e65
  $tc'Pair1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6c6badc3de0827528403c64d1dcd3ed3
  $tc'Pair2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Pair3) -}
64ff469fc2af97917edea9335b601672
  $tc'Pair3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Pair"#) -}
ec872dabcdcb6321cd087e719c2417df
  $tc'PreList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1916101203003093720##
                   5062507866515841581##
                   Types.$trModule
                   Types.$tc'PreList2
                   0#
                   Types.$tc'PreList1) -}
bdfc07d3ae2476ad39794a0880754bf4
  $tc'PreList1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
672d33948a7a0b8bc0c1ee356dd33163
  $tc'PreList2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'PreList3) -}
697ccdc90f6adb346dde3aa67f8d59ca
  $tc'PreList3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PreList"#) -}
54137a2d99201ce39eba597a83f57e35
  $tc'Print :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   571661109718605856##
                   17643898912897264064##
                   Types.$trModule
                   Types.$tc'Print1
                   0#
                   Types.$tc'Err1) -}
e6bd481a151f051c3c22a62f59baf598
  $tc'Print1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Print2) -}
e356b88eb0e728c8575d3a2dc79de3f4
  $tc'Print2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Print"#) -}
ecc1df1bcc1b2f709eb2ab27b09889cc
  $tc'Str :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2849484910803134195##
                   15669653076507027821##
                   Types.$trModule
                   Types.$tc'Str1
                   0#
                   Types.$tc'Err1) -}
97eba52083e11056d91980693645483f
  $tc'Str1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Str2) -}
28a404d0de280f02b7e5debca1f9b521
  $tc'Str2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Str"#) -}
5759c75146d729baaeeb186e78a3ee31
  $tc'T_Any :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18246106751779788933##
                   4188317691507999655##
                   Types.$trModule
                   Types.$tc'T_Any2
                   0#
                   Types.$tc'T_Any1) -}
0868577a3c67c2dba39b056df0b83389
  $tc'T_Any1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
8d258fc0119100aa44b2873afabe8fc3
  $tc'T_Any2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Any3) -}
c20307b4a45d3da1096c9ff5655ff892
  $tc'T_Any3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Any"#) -}
4383bd126674ca3f9dc1b08db685ab4c
  $tc'T_BinaryOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4162056918578602287##
                   3106541830650877179##
                   Types.$trModule
                   Types.$tc'T_BinaryOp1
                   0#
                   Types.$tc'T_Any1) -}
b6cc73393a758564d7dff01894268616
  $tc'T_BinaryOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_BinaryOp2) -}
cbb54498164b79689472ca6993d655bd
  $tc'T_BinaryOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_BinaryOp"#) -}
a913aae62071e0005aeed5060d39335e
  $tc'T_Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5789772888182623976##
                   10566131470320075035##
                   Types.$trModule
                   Types.$tc'T_Bool1
                   0#
                   Types.$tc'T_Any1) -}
0d7f6408f2afd6f01cb4afa8cb5a3157
  $tc'T_Bool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Bool2) -}
e757665882d613d09d086a68f59d2092
  $tc'T_Bool2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Bool"#) -}
7b907b2d5deb22814cd20f935e131545
  $tc'T_Double :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8813449188410762040##
                   16179567519023800758##
                   Types.$trModule
                   Types.$tc'T_Double1
                   0#
                   Types.$tc'T_Any1) -}
e21555be4bba4251af36534df8255420
  $tc'T_Double1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Double2) -}
a06249e6c9521ff22d4832609041570e
  $tc'T_Double2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Double"#) -}
fa7a5d554b6995d629c6ac662305f99e
  $tc'T_EmptyList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16872264756723706840##
                   16836371461026484202##
                   Types.$trModule
                   Types.$tc'T_EmptyList1
                   0#
                   Types.$tc'T_Any1) -}
5e2f83b48c3971bb309602fc06928cb0
  $tc'T_EmptyList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_EmptyList2) -}
f69e557f726bed59b29f63a5d82dc0a6
  $tc'T_EmptyList2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_EmptyList"#) -}
984a37c2ba30ee3927fddec61fc98c6d
  $tc'T_Error :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4193257841784578973##
                   4623065719461549352##
                   Types.$trModule
                   Types.$tc'T_Error1
                   0#
                   Types.$tc'T_Any1) -}
a06c995fbd70833f2195f5466df1e38f
  $tc'T_Error1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Error2) -}
522459fa18a909ef0b8995473c607107
  $tc'T_Error2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Error"#) -}
57879b5e6b01bd00cd5cbaeca4f6838f
  $tc'T_Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7502027956019668387##
                   15187094274158574129##
                   Types.$trModule
                   Types.$tc'T_Func2
                   0#
                   Types.$tc'T_Func1) -}
661880ea89df694b78a01a4d71cc79dc
  $tc'T_Func1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1a6f6ec0bec16d76aa72069a2fb0c6a4
  $tc'T_Func2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Func3) -}
c9c6f7d68fd0cd33c5da722e42b08189
  $tc'T_Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Func"#) -}
6de4a18e48419d2c9bef482bd6f9e109
  $tc'T_Function :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1422403100830599288##
                   13277103203279679273##
                   Types.$trModule
                   Types.$tc'T_Function2
                   0#
                   Types.$tc'T_Function1) -}
b33e88b7ba0f85f983d665106e684e5a
  $tc'T_Function1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4d53a9a5748cb137da6b86674a03470a
  $tc'T_Function2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Function3) -}
23833a8e07b5a5d576484046a9072843
  $tc'T_Function3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Function"#) -}
ab1027a2e140388ef95e80c967450ce9
  $tc'T_FunctionOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1513120101894806560##
                   268337108302034253##
                   Types.$trModule
                   Types.$tc'T_FunctionOp1
                   0#
                   Types.$tc'T_Any1) -}
2f6fba629ee194d0ff7429b70ec1625e
  $tc'T_FunctionOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_FunctionOp2) -}
37c3ec3e13edc1a575f1aa5c2b0af2e7
  $tc'T_FunctionOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_FunctionOp"#) -}
c7ed0b93e4524d6b46b578dbcc0dad11
  $tc'T_Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14048120351085997940##
                   17507335936960378620##
                   Types.$trModule
                   Types.$tc'T_Int1
                   0#
                   Types.$tc'T_Any1) -}
3a5ad03492945f7dbd38075bfb0faa78
  $tc'T_Int1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Int2) -}
ad57fc2a6dd7454a729e0abcd2e3ecba
  $tc'T_Int2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Int"#) -}
0e3f6a7566d39119b5db5c341e5364a4
  $tc'T_List :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10714740093169110374##
                   251382634889715181##
                   Types.$trModule
                   Types.$tc'T_List2
                   0#
                   Types.$tc'T_List1) -}
b997f4ee02d49156f2fa1630bc87b08e
  $tc'T_List1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
669ad36923337329af13f2aa3bfa9ace
  $tc'T_List2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_List3) -}
7f3f4d645a09c22b84f8609da73aa464
  $tc'T_List3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_List"#) -}
3e0366abced9c56e48b14517d10fd2e8
  $tc'T_Operator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7912049611309761574##
                   9316407142444618514##
                   Types.$trModule
                   Types.$tc'T_Operator2
                   0#
                   Types.$tc'T_Operator1) -}
936edbe46adc5b4ef203a1580e5f6ff8
  $tc'T_Operator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7e594226a2daaad0ef04ac163812319a
  $tc'T_Operator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Operator3) -}
6c5d0335052a15405b17fd358254133c
  $tc'T_Operator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Operator"#) -}
3e239aa531770e16c22bcad0f4d15630
  $tc'T_PreList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16231326714584408763##
                   14087408133764631055##
                   Types.$trModule
                   Types.$tc'T_PreList1
                   0#
                   Types.$tc'T_Any1) -}
617396655086dacfaf96d23e288d81ff
  $tc'T_PreList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_PreList2) -}
770536ca6eb807cb6472e3a3ca7f0b8c
  $tc'T_PreList2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_PreList"#) -}
13f856db564b50778eab8fecd93ebea1
  $tc'T_Print :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12773741311393936514##
                   17643335695324312716##
                   Types.$trModule
                   Types.$tc'T_Print1
                   0#
                   Types.$tc'T_Any1) -}
d233f4d6bf4f125ea3025a359985c6bf
  $tc'T_Print1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Print2) -}
05f010a418c41eca72b3901cf504e13f
  $tc'T_Print2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Print"#) -}
9b43efa1519e959b629130d0039bc72e
  $tc'T_String :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10251998695798201288##
                   3990652457458907347##
                   Types.$trModule
                   Types.$tc'T_String1
                   0#
                   Types.$tc'T_Any1) -}
6ffe5dae228bcd4a83207ad77ef07560
  $tc'T_String1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_String2) -}
012c0c375d2b76798fe93ae25a7366fd
  $tc'T_String2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_String"#) -}
1c7ebe909ef14d8b0092bf9895d8b6a3
  $tc'T_Tuple :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6638338693540996418##
                   7155228993218640867##
                   Types.$trModule
                   Types.$tc'T_Tuple2
                   0#
                   Types.$tc'T_Tuple1) -}
6ce856e217e7835ec58c7f3712be648c
  $tc'T_Tuple1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ce6c8afdbf99c9d2314ab06d85ff2ec2
  $tc'T_Tuple2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Tuple3) -}
6e6bf8a6803d8026efbe365f0dd45bc6
  $tc'T_Tuple3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Tuple"#) -}
e50625e9cbd318ac244670dffe22b716
  $tc'T_Type :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8313157014912104979##
                   12518322790417991433##
                   Types.$trModule
                   Types.$tc'T_Type1
                   0#
                   Types.$tc'T_Any1) -}
d81ccbd265cf0ad7c28d60dcfaf3e242
  $tc'T_Type1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Type2) -}
3de7cca271155a59efaa66c7d224e12a
  $tc'T_Type2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Type"#) -}
2b44a121457fddbe4404cbbf7153606b
  $tc'T_TypeCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13350578060513742954##
                   7039956555445760548##
                   Types.$trModule
                   Types.$tc'T_TypeCheck1
                   0#
                   Types.$tc'T_Any1) -}
23f707916869edb73022065252dee338
  $tc'T_TypeCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_TypeCheck2) -}
d43e508a646f6f1be35416aa4ef9412f
  $tc'T_TypeCheck2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_TypeCheck"#) -}
21880e893c26efab9a9852f56df23989
  $tc'T_UnaryOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6107437322698980527##
                   8733958163917038473##
                   Types.$trModule
                   Types.$tc'T_UnaryOp1
                   0#
                   Types.$tc'T_Any1) -}
d595ab8286763e3be7984b3c6f6f8341
  $tc'T_UnaryOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_UnaryOp2) -}
91244431d2bd56bf70768da1408715bd
  $tc'T_UnaryOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_UnaryOp"#) -}
8de196fc387d57aa51fe2d476371e206
  $tc'T_Unknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5562059598108177631##
                   8177515453577610499##
                   Types.$trModule
                   Types.$tc'T_Unknown1
                   0#
                   Types.$tc'T_Any1) -}
ec30d58896bceac09761fc6955425bd0
  $tc'T_Unknown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Unknown2) -}
4210eb843c7f875687261e1af7566db4
  $tc'T_Unknown2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Unknown"#) -}
3080470dda809a0407e38b1c385ca7b7
  $tc'ToEval :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3668549774954288373##
                   16305579864681745230##
                   Types.$trModule
                   Types.$tc'ToEval1
                   0#
                   Types.$tc'Contents1) -}
21c1630399a4f71d493a5d3d0797e157
  $tc'ToEval1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ToEval2) -}
60c01cd8dc9d4fc7f695f8d6c9f4d0f7
  $tc'ToEval2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ToEval"#) -}
ad601e499e9e5121c7e1ac25ba087969
  $tc'Tobe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7740181517026229752##
                   865118413147965549##
                   Types.$trModule
                   Types.$tc'Tobe1
                   0#
                   Types.$tc'Err1) -}
a9ee1ed59f9cb900eb852764ce88f55c
  $tc'Tobe1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Tobe2) -}
1abfeab58e0eb7ed25ee36a9f2d96ce6
  $tc'Tobe2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tobe"#) -}
31cfbc0b1e5e68b5d18a158ab531925b
  $tc'Tuple :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3285304855784235747##
                   5274458238452499385##
                   Types.$trModule
                   Types.$tc'Tuple1
                   0#
                   Types.$tc'Contents1) -}
7f29a054c2d1e4ebc6e847b085111c8a
  $tc'Tuple1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Tuple2) -}
181a10ca67ee08b545eb9ffa8a7f92f2
  $tc'Tuple2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tuple"#) -}
cedcaba334d6ee84635973e8657d8a23
  $tc'Type :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   271822688257937312##
                   5944374233852313872##
                   Types.$trModule
                   Types.$tc'Type2
                   0#
                   Types.$tc'Type1) -}
41a20cc65c95eb8acddf69f5315b7b01
  $tc'Type1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f6594d40c1dc52f272990713ecdde421
  $tc'Type2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Type3) -}
a97a8833bfd421901ac698b9dddaa883
  $tc'Type3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Type"#) -}
ce9d1ab8571266df016bd5d22747d206
  $tc'TypeCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18227766236198118003##
                   2917413297357613987##
                   Types.$trModule
                   Types.$tc'TypeCheck1
                   0#
                   Types.$tc'Type1) -}
a408cfdd9a01450d91ceaa75daa28333
  $tc'TypeCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'TypeCheck2) -}
88facd0cb7d53fa0a46273a2b445d2c8
  $tc'TypeCheck2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeCheck"#) -}
aa7eb96bd7b3e2637fe25a709204ab22
  $tc'UnOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4181747523952757646##
                   5467055216193090417##
                   Types.$trModule
                   Types.$tc'UnOp2
                   0#
                   Types.$tc'UnOp1) -}
4e5d98eb6d8c78dd041a12231b1f1840
  $tc'UnOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1c9903dd40bc0ca30411083945410e42
  $tc'UnOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'UnOp3) -}
34649266877667cf0f0f4c4d66f3460f
  $tc'UnOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UnOp"#) -}
5aa5536d76883329bb0c8ea2d9c131f4
  $tcBind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13347864396066469870##
                   9029185210157968267##
                   Types.$trModule
                   Types.$tcBind1
                   0#
                   GHC.Types.krep$*) -}
f68eed46abe31d171e9e8678dd87b327
  $tcBind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcBind2) -}
233aaad4e8478c57bf940ae03e64ba5a
  $tcBind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bind"#) -}
47bd7e07a3c1f7d7e7b79a03b641573f
  $tcEvalMode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11370265279165524313##
                   2379217631021330669##
                   Types.$trModule
                   Types.$tcEvalMode1
                   0#
                   GHC.Types.krep$*) -}
044b121961e1ebf0fc749fd18e1eb726
  $tcEvalMode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcEvalMode2) -}
23ba2b8e286259c1ceab16cdad69deb7
  $tcEvalMode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EvalMode"#) -}
a6b70d008cb303458b1e9f023c7fc200
  $tcFunc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2091690470252846508##
                   8602331002649990518##
                   Types.$trModule
                   Types.$tcFunc1
                   0#
                   GHC.Types.krep$*) -}
3160fe2a65fde6e0bf582f2b756fb3ef
  $tcFunc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcFunc2) -}
6eb37c4ceaadda65ae2de72dcf9ceca7
  $tcFunc2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Func"#) -}
492a8b467724462cbd5ff26f662c5f34
  $tcFunction :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   235456010557813009##
                   6669349419494010464##
                   Types.$trModule
                   Types.$tcFunction1
                   0#
                   GHC.Types.krep$*) -}
6093b4ea168fc4682d8aaafd7d8b273e
  $tcFunction1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcFunction2) -}
d135da4fd49cfc097d13f146869e9bf7
  $tcFunction2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Function"#) -}
ed3e4f6a09d041c1142c159fdbaebdda
  $tcOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4518431778985342277##
                   11727720194243735460##
                   Types.$trModule
                   Types.$tcOp1
                   0#
                   GHC.Types.krep$*) -}
1d3330ec706027a00ca8d1cb3e5ac699
  $tcOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcOp2) -}
0ba58804cb6acebdf788b0380053cd3f
  $tcOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Op"#) -}
3f546a8dd7a1b3f667b8408f26d63af0
  $tcT_Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12822367976242272126##
                   2978428006317629224##
                   Types.$trModule
                   Types.$tcT_Func1
                   0#
                   GHC.Types.krep$*) -}
46719605c0c87590f80f3e38a9c46a27
  $tcT_Func1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcT_Func2) -}
2dfc39a8ec64e97303b2a7229c14ebba
  $tcT_Func2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T_Func"#) -}
9ab673e6d0290ba9664d99d1feb02228
  $tcType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7714810659226446728##
                   17121076170857171751##
                   Types.$trModule
                   Types.$tcType1
                   0#
                   GHC.Types.krep$*) -}
5088936650e2e80fc558b22d260addce
  $tcType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcType2) -}
7bfa104129f2004086e102a88d1d6a8e
  $tcType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Type"#) -}
1b96d1c7e064c00e3b6614bba3623716
  $tcWrd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17747612522665387162##
                   11673135252177938117##
                   Types.$trModule
                   Types.$tcWrd1
                   0#
                   GHC.Types.krep$*) -}
a23c4a30b6e3e5fa58f72124b324b967
  $tcWrd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcWrd2) -}
0d7df04f37ef6703fca202fff1d2d258
  $tcWrd2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Wrd"#) -}
d31d6e729fc0eabb5e2ce3314e2aac17
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Types.$trModule3 Types.$trModule1) -}
a06fb36839a776ab78d9d536da8c6782
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$trModule2) -}
b1ba031e18293d488645a8122f642027
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Types"#) -}
268e52265c143f7521d661c57fc8627a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$trModule4) -}
49c2aecd32c5389552945fb259f9e75c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Topos-0.1.0.0-L2hSunVxFDyol1qAzNo2F"#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$c== ::
    GHC.Base.String
    -> Types.Wrd
    -> Types.Type
    -> GHC.Base.String
    -> Types.Wrd
    -> Types.Type
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: Types.Wrd)
                   (ww2 :: Types.Type)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: Types.Wrd)
                   (ww5 :: Types.Type) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Types.$fEqBind_$c==2 ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> Types.$fEqBind_$c==1 ww2 ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$c==1 ::
    [(Types.Type, GHC.Base.String)]
    -> Types.Type
    -> Types.Exp
    -> [(Types.Type, GHC.Base.String)]
    -> Types.Type
    -> Types.Exp
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: [(Types.Type, GHC.Base.String)])
                   (ww1 :: Types.Type)
                   (ww2 :: Types.Exp)
                   (ww3 :: [(Types.Type, GHC.Base.String)])
                   (ww4 :: Types.Type)
                   (ww5 :: Types.Exp) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Types.Type, GHC.Base.String)
                        Types.$fEqFunction_$s$fEq(,)
                        ww
                        ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Types.$fEqBind_$c==1 ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> GHC.Classes.$fEq[]_$c==
                             @ Types.Wrd
                             Types.$fEqWrd
                             ww2
                             ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String -> Types.Wrd -> Types.Type -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: Types.Wrd)
                   (ww3 :: Types.Type) ->
                 let {
                   f4 :: GHC.Base.String -> GHC.Base.String
                   = Types.$fShowBind_$cshowsPrec1 Types.$fShowBind2 ww3
                 } in
                 let {
                   lvl62 :: GHC.Base.String = Types.$fShowBind_$cshow ww2
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Types.$fShowBind7
                       (GHC.CString.unpackAppendCString#
                          Types.$fShowBind6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)3
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Types.$fShowBind5
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            lvl62
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               GHC.Show.showCommaSpace1
                                               (GHC.CString.unpackAppendCString#
                                                  Types.$fShowBind4
                                                  (f4
                                                     (GHC.CString.unpackAppendCString#
                                                        Types.$fShowBind3
                                                        x)))))))))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec1 :: GHC.Prim.Int# -> Types.Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.Func) ->
                 case w of wild {
                   Types.Fun b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww1 { Types.Function ww2 ww3 ww4 ->
                          Types.$w$cshowsPrec2 11# ww2 ww3 ww4 }
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc10 (g x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Types.$fShowFunc10
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   Types.Operator b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Types.$fShowFunc9
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.$fShow(,)4
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.$fShow(,)3
                                  (GHC.Show.showLitString
                                     ww2
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.$fShow(,)3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.showList__1
                                           (GHC.Show.$fShow(,)_$sgo1
                                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)
                                              (\ (w1 :: GHC.Base.String)[OneShot] ->
                                               Types.$fShowFunc2 ww3 w1)
                                              (GHC.Types.[] @ GHC.Show.ShowS)))))) })
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> [(Types.Type, GHC.Base.String)]
    -> Types.Type
    -> Types.Exp
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U><L,U>, Inline: [2] -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec3 :: GHC.Prim.Int# -> Types.T_Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.T_Func) ->
                 case w of wild {
                   Types.T_Function b1 b2
                   -> let {
                        f4 :: GHC.Base.String -> GHC.Base.String
                        = Types.$fShowBind_$cshowsPrec1 Types.$fShowBind2 b2
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Types.$fShowT_Func5
                            (GHC.CString.unpackAppendCString#
                               Types.$fShowT_Func4
                               (let {
                                  s :: GHC.Base.String
                                  = GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Types.$fShowT_Func3
                                         (f4
                                            (GHC.CString.unpackAppendCString# Types.$fShowBind3 x)))
                                } in
                                case b1 of wild1 {
                                  [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 s
                                  : x1 xs
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showList__3
                                       (Types.$fShowBind_$cshowsPrec1
                                          Types.$fShowBind2
                                          x1
                                          (let {
                                             lvl62 :: [GHC.Types.Char]
                                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 s
                                           } in
                                           letrec {
                                             showl :: [Types.Type] -> GHC.Base.String
                                               {- Arity: 1, Strictness: <S,1*U> -}
                                             = \ (ds2 :: [Types.Type]) ->
                                               case ds2 of wild2 {
                                                 [] -> lvl62
                                                 : y ys
                                                 -> GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      (Types.$fShowBind_$cshowsPrec1
                                                         Types.$fShowBind2
                                                         y
                                                         (showl ys)) }
                                           } in
                                           showl xs)) }))
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }
                   Types.T_Operator b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Types.$fShowT_Func2
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.$fShow(,)4
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.$fShow(,)3
                                  (GHC.Show.showLitString
                                     ww2
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.$fShow(,)3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.showList__1
                                           (GHC.Show.$fShow(,)_$sgo1
                                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)
                                              (\ (w1 :: GHC.Base.String)[OneShot] ->
                                               Types.$fShowFunc2 ww3 w1)
                                              (GHC.Types.[] @ GHC.Show.ShowS)))))) })
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  type BinaryOp :: *
  type BinaryOp = Types.Wrd -> Types.Wrd -> Types.Wrd
41e7a32a3a97b64b95a9c2dd25716e8f
  type Bind :: *
  data Bind
    = Bind {identifier :: GHC.Base.String,
            value :: Types.Wrd,
            vtype :: Types.Type}
033e148ab2ed3368fa8a91bde533879d
  type EvalMode :: *
  data EvalMode = M_Normal | M_TypeCheck
41e7a32a3a97b64b95a9c2dd25716e8f
  type Exp :: *
  type Exp = [Types.Wrd]
41e7a32a3a97b64b95a9c2dd25716e8f
  type Func :: *
  data Func = Fun Types.Function | Operator Types.StrOp
41e7a32a3a97b64b95a9c2dd25716e8f
  type Function :: *
  data Function
    = Function {args :: [(Types.Type, GHC.Base.String)],
                ret_t :: Types.Type,
                ret :: Types.Exp}
41e7a32a3a97b64b95a9c2dd25716e8f
  type FunctionOp :: *
  type FunctionOp = (GHC.Types.Int, Types.Exp -> Types.Wrd)
41e7a32a3a97b64b95a9c2dd25716e8f
  type Op :: *
  data Op
    = BinOp Types.BinaryOp
    | UnOp Types.UnaryOp
    | FuncOp Types.FunctionOp
41e7a32a3a97b64b95a9c2dd25716e8f
  type StrOp :: *
  type StrOp = (GHC.Base.String, Types.Op)
41e7a32a3a97b64b95a9c2dd25716e8f
  type T_Func :: *
  data T_Func
    = T_Function {args_t :: [Types.Type], return_t :: Types.Type}
    | T_Operator (GHC.Base.String, Types.Op)
41e7a32a3a97b64b95a9c2dd25716e8f
  type Type :: *
  data Type
    = T_Int
    | T_Double
    | T_Bool
    | T_String
    | T_Func Types.T_Func
    | T_UnaryOp
    | T_BinaryOp
    | T_FunctionOp
    | T_PreList
    | T_List Types.Type
    | T_EmptyList
    | T_Tuple [Types.Type]
    | T_Print
    | T_Unknown
    | T_Any
    | T_Type
    | T_Error
    | T_TypeCheck
41e7a32a3a97b64b95a9c2dd25716e8f
  type UnaryOp :: *
  type UnaryOp = Types.Wrd -> Types.Wrd
41e7a32a3a97b64b95a9c2dd25716e8f
  type Wrd :: *
  data Wrd
    = Str GHC.Base.String
    | Func Types.Func
    | Bnd Types.Bind
    | Print GHC.Base.String
    | Tobe GHC.Base.String
    | Double GHC.Types.Double
    | Int GHC.Types.Int
    | Bool GHC.Types.Bool
    | Null
    | List Types.Exp
    | ToEval Types.Exp
    | Err GHC.Base.String
    | Pair (Types.Wrd, Types.Wrd)
    | PreList [Types.Exp]
    | Type Types.Type
    | Contents Types.Exp
    | Tuple Types.Exp
    | TypeCheck Types.Type
41e7a32a3a97b64b95a9c2dd25716e8f
  args :: Types.Function -> [(Types.Type, GHC.Base.String)]
  RecSel Left Types.Function
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Function) ->
                 case ds of wild { Types.Function ds1 ds2 ds3 -> ds1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  args_t :: Types.T_Func -> [Types.Type]
  RecSel Left Types.T_Func
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.T_Func) ->
                 case ds of wild {
                   Types.T_Function ds1 ds2 -> ds1
                   Types.T_Operator ipv -> Types.args_t1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  args_t1 :: [Types.Type]
  {- Strictness: b -}
41e7a32a3a97b64b95a9c2dd25716e8f
  identifier :: Types.Bind -> GHC.Base.String
  RecSel Left Types.Bind
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Bind) ->
                 case ds of wild { Types.Bind ds1 ds2 ds3 -> ds1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  ret :: Types.Function -> Types.Exp
  RecSel Left Types.Function
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Function) ->
                 case ds of wild { Types.Function ds1 ds2 ds3 -> ds3 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  ret_t :: Types.Function -> Types.Type
  RecSel Left Types.Function
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Function) ->
                 case ds of wild { Types.Function ds1 ds2 ds3 -> ds2 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  return_t :: Types.T_Func -> Types.Type
  RecSel Left Types.T_Func
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.T_Func) ->
                 case ds of wild {
                   Types.T_Function ds1 ds2 -> ds2
                   Types.T_Operator ipv -> Types.return_t1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  return_t1 :: Types.Type
  {- Strictness: b -}
18f0eaa319b737788e6e4d55a60bd643
  typeEq :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Type) (ds1 :: Types.Type) ->
                 case ds of wild {
                   DEFAULT
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT -> Types.$fEqBind_$c==1 wild2 wild3
                                  Types.T_Any -> GHC.Types.True }
                             Types.T_Any -> GHC.Types.True }
                        Types.T_Unknown -> GHC.Types.False }
                   Types.T_Unknown -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  value :: Types.Bind -> Types.Wrd
  RecSel Left Types.Bind
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Bind) ->
                 case ds of wild { Types.Bind ds1 ds2 ds3 -> ds2 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  vtype :: Types.Bind -> Types.Type
  RecSel Left Types.Bind
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Bind) ->
                 case ds of wild { Types.Bind ds1 ds2 ds3 -> ds3 }) -}
instance [safe] GHC.Classes.Eq [Types.Bind] = Types.$fEqBind
instance [safe] GHC.Classes.Eq [Types.Function]
  = Types.$fEqFunction
instance [safe] GHC.Classes.Eq [Types.T_Func] = Types.$fEqT_Func
instance [safe] GHC.Classes.Eq [Types.Type] = Types.$fEqType
instance [safe] GHC.Classes.Eq [Types.Wrd] = Types.$fEqWrd
instance [safe] GHC.Classes.Ord [Types.Type] = Types.$fOrdType
instance [safe] GHC.Show.Show [Types.Bind] = Types.$fShowBind
instance [safe] GHC.Show.Show [Types.Func] = Types.$fShowFunc
instance [safe] GHC.Show.Show [Types.Function]
  = Types.$fShowFunction
instance [safe] GHC.Show.Show [Types.Op] = Types.$fShowOp
instance [safe] GHC.Show.Show [Types.T_Func] = Types.$fShowT_Func
instance [safe] GHC.Show.Show [Types.Type] = Types.$fShowType
instance [safe] GHC.Show.Show [Types.Wrd] = Types.$fShowWrd
"SPEC/Types $fEq(,) @ Type @ [Char]" forall (v :: GHC.Classes.Eq
                                                    Types.Type)
                                            (v1 :: GHC.Classes.Eq [GHC.Types.Char]).
  GHC.Classes.$fEq(,) @ Types.Type @ [GHC.Types.Char] v v1
  = Types.$fEqFunction_$s$fEq(,)
"SPEC/Types $fEq(,)_$c/= @ Type @ [Char]" forall ($dEq :: GHC.Classes.Eq
                                                            Types.Type)
                                                 ($dEq1 :: GHC.Classes.Eq [GHC.Types.Char]).
  GHC.Classes.$fEq(,)_$c/= @ Types.Type @ [GHC.Types.Char] $dEq $dEq1
  = Types.$fEqFunction_$s$fEq(,)_$c/=
trusted: safe-inferred
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:


==================== FINAL INTERFACE ====================
2021-04-09 04:56:42.7590994 UTC

interface Topos-0.1.0.0-L2hSunVxFDyol1qAzNo2F:Types 8104
  interface hash: 54ae6c3ad42f2a493e029fb0d06d7acf
  ABI hash: 2870f235e2eecb0b3d25891749dd9b60
  export-list hash: fb3343c70ce167cabb463f2e586dc9ec
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 358a18e1043fc7ac1b015a88503b1325
  opt_hash: cb09a535710eb16767a299f2ded44a31
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Types.typeEq
  Types.BinaryOp
  Types.Bind{Types.Bind identifier value vtype}
  Types.EvalMode{Types.M_Normal Types.M_TypeCheck}
  Types.Exp
  Types.Func{Types.Fun Types.Operator}
  Types.Function{Types.Function args ret ret_t}
  Types.FunctionOp
  Types.Op{Types.BinOp Types.FuncOp Types.UnOp}
  Types.StrOp
  Types.T_Func{Types.T_Function Types.T_Operator args_t return_t}
  Types.Type{Types.T_Any Types.T_BinaryOp Types.T_Bool Types.T_Double Types.T_EmptyList Types.T_Error Types.T_Func Types.T_FunctionOp Types.T_Int Types.T_List Types.T_PreList Types.T_Print Types.T_String Types.T_Tuple Types.T_Type Types.T_TypeCheck Types.T_UnaryOp Types.T_Unknown}
  Types.UnaryOp
  Types.Wrd{Types.Bnd Types.Bool Types.Contents Types.Double Types.Err Types.Func Types.Int Types.List Types.Null Types.Pair Types.PreList Types.Print Types.Str Types.ToEval Types.Tobe Types.Tuple Types.Type Types.TypeCheck}
module dependencies:
package dependencies: base-4.14.1.0* ghc-prim-0.6.1
                      integer-gmp-1.0.3.0
orphans: base-4.14.1.0:GHC.Float base-4.14.1.0:GHC.Base
family instance modules: base-4.14.1.0:Control.Applicative
                         base-4.14.1.0:Control.Arrow base-4.14.1.0:Data.Functor.Const
                         base-4.14.1.0:Data.Functor.Identity base-4.14.1.0:Data.Monoid
                         base-4.14.1.0:Data.Semigroup.Internal base-4.14.1.0:GHC.Generics
                         base-4.14.1.0:GHC.IO.Exception
import  -/  base-4.14.1.0:GHC.Base ede51775731a544ddfcb02b5a427fd38
import  -/  base-4.14.1.0:GHC.Show 57e93b26a19b08606d2ae3a6ff8065f2
import  -/  base-4.14.1.0:Prelude 5c84dfddbb8583fc340ecd15bead164a
import  -/  ghc-prim-0.6.1:GHC.Classes e50fb3f1cbf74ce4d3874442e4300a09
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind :: GHC.Classes.Eq Types.Bind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Bind Types.$fEqBind_$c== Types.$fEqBind_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c/= :: Types.Bind -> Types.Bind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Bind) (y :: Types.Bind) ->
                 case Types.$fEqBind_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c== :: Types.Bind -> Types.Bind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Bind) (w1 :: Types.Bind) ->
                 case w of ww { Types.Bind ww1 ww2 ww3 ->
                 case w1 of ww4 { Types.Bind ww5 ww6 ww7 ->
                 Types.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c==1 :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqBind_$c==2 :: Types.Wrd -> Types.Wrd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction :: GHC.Classes.Eq Types.Function
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Function Types.$fEqFunction_$c== Types.$fEqFunction_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$c/= ::
    Types.Function -> Types.Function -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Function) (y :: Types.Function) ->
                 case Types.$fEqFunction_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$c== ::
    Types.Function -> Types.Function -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Function) (w1 :: Types.Function) ->
                 case w of ww { Types.Function ww1 ww2 ww3 ->
                 case w1 of ww4 { Types.Function ww5 ww6 ww7 ->
                 Types.$w$c==1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$s$fEq(,) ::
    GHC.Classes.Eq (Types.Type, [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Types.Type, [GHC.Types.Char])
                  (GHC.Classes.$fEq(,)_$c==
                     @ Types.Type
                     @ [GHC.Types.Char]
                     Types.$fEqType
                     GHC.Classes.$fEq[]_$s$fEq[]1)
                  Types.$fEqFunction_$s$fEq(,)_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqFunction_$s$fEq(,)_$c/= ::
    (Types.Type, [GHC.Types.Char])
    -> (Types.Type, [GHC.Types.Char]) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (Types.Type, [GHC.Types.Char]))
                   (y :: (Types.Type, [GHC.Types.Char])) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case Types.$fEqBind_$c==1 a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqT_Func :: GHC.Classes.Eq Types.T_Func
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.T_Func Types.$fEqT_Func_$c== Types.$fEqT_Func_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqT_Func_$c/= :: Types.T_Func -> Types.T_Func -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.T_Func) (y :: Types.T_Func) ->
                 case Types.$fEqT_Func_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqT_Func_$c== :: Types.T_Func -> Types.T_Func -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Types.T_Func) (ds1 :: Types.T_Func) ->
                 case ds of wild {
                   Types.T_Function ds2 ds3
                   -> case ds1 of wild1 {
                        Types.T_Function ds4 ds5
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Types.Type
                                  Types.$fEqType
                                  ds2
                                  ds4 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> Types.$fEqBind_$c==1 ds3 ds5 }
                        Types.T_Operator ipv -> GHC.Types.False }
                   Types.T_Operator ds2
                   -> case ds2 of wild1 { (,) s1 ds3 ->
                      case ds1 of wild2 {
                        Types.T_Function ipv ipv1 -> GHC.Types.False
                        Types.T_Operator ds4
                        -> case ds4 of wild3 { (,) s2 ds5 ->
                           GHC.Base.eqString s1 s2 } } } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqType :: GHC.Classes.Eq Types.Type
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type Types.$fEqBind_$c==1 Types.$fEqType_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqType_$c/= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqWrd :: GHC.Classes.Eq Types.Wrd
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Wrd Types.$fEqBind_$c==2 Types.$fEqWrd_$c/= -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fEqWrd_$c/= :: Types.Wrd -> Types.Wrd -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Types.Wrd) (y :: Types.Wrd) ->
                 case Types.$fEqBind_$c==2 x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType :: GHC.Classes.Ord Types.Type
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type
                  Types.$fEqType
                  Types.$fOrdType_$ccompare
                  Types.$fOrdType_$c<
                  Types.$fOrdType_$c<=
                  Types.$fOrdType_$c>
                  Types.$fOrdType_$c>=
                  Types.$fOrdType_$cmax
                  Types.$fOrdType_$cmin -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c< :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.False Types.T_Any -> GHC.Types.True }
                                  Types.T_Any -> GHC.Types.True }
                             Types.T_Unknown -> GHC.Types.False }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT -> Types.$fEqBind_$c==1 Types.T_EmptyList wild2
                             Types.T_List ds -> GHC.Types.True
                             Types.T_Unknown -> GHC.Types.False
                             Types.T_Any -> GHC.Types.True }
                        Types.T_Unknown -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c<= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Type) (ds1 :: Types.Type) ->
                 case ds of wild {
                   DEFAULT
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT -> Types.$fEqBind_$c==1 wild2 wild3
                                  Types.T_Any -> GHC.Types.True }
                             Types.T_Any -> GHC.Types.True }
                        Types.T_Unknown -> GHC.Types.False }
                   Types.T_EmptyList
                   -> case ds1 of wild1 {
                        DEFAULT -> Types.$fEqBind_$c==1 Types.T_EmptyList wild1
                        Types.T_List ds2 -> GHC.Types.True
                        Types.T_Unknown -> GHC.Types.False
                        Types.T_Any -> GHC.Types.True }
                   Types.T_Unknown -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c> :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.True Types.T_Any -> GHC.Types.False }
                                  Types.T_Any -> GHC.Types.False }
                             Types.T_Unknown -> GHC.Types.True }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT
                             -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild2 of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             Types.T_List ds -> GHC.Types.False
                             Types.T_Unknown -> GHC.Types.True
                             Types.T_Any -> GHC.Types.False }
                        Types.T_Unknown -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$c>= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.True Types.T_Any -> GHC.Types.False }
                                  Types.T_Any -> GHC.Types.False }
                             Types.T_Unknown -> GHC.Types.True }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT
                             -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild2 of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             Types.T_List ds -> GHC.Types.False
                             Types.T_Unknown -> GHC.Types.True
                             Types.T_Any -> GHC.Types.False }
                        Types.T_Unknown -> GHC.Types.True }
                   GHC.Types.True -> GHC.Types.True }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$ccompare ::
    Types.Type -> Types.Type -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Types.Type) (y :: Types.Type) ->
                 case Types.$fEqBind_$c==1 x y of wild {
                   GHC.Types.False
                   -> case x of wild1 {
                        DEFAULT
                        -> case y of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case wild2 of wild4 {
                                       DEFAULT -> GHC.Types.GT Types.T_Any -> GHC.Types.LT }
                                  Types.T_Any -> GHC.Types.LT }
                             Types.T_Unknown -> GHC.Types.GT }
                        Types.T_EmptyList
                        -> case y of wild2 {
                             DEFAULT
                             -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild2 of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.LT }
                             Types.T_List ds -> GHC.Types.LT
                             Types.T_Unknown -> GHC.Types.GT
                             Types.T_Any -> GHC.Types.LT }
                        Types.T_Unknown -> GHC.Types.GT }
                   GHC.Types.True -> GHC.Types.EQ }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$cmax :: Types.Type -> Types.Type -> Types.Type
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (x :: Types.Type) (y :: Types.Type) ->
                 case x of wild {
                   DEFAULT
                   -> case y of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case Types.$fEqBind_$c==1 wild2 wild3 of wild4 {
                                       GHC.Types.False -> wild2 GHC.Types.True -> wild3 }
                                  Types.T_Any -> Types.T_Any }
                             Types.T_Any -> wild1 }
                        Types.T_Unknown -> wild }
                   Types.T_EmptyList
                   -> case y of wild1 {
                        DEFAULT
                        -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild1 of wild2 {
                             GHC.Types.False -> Types.T_EmptyList GHC.Types.True -> wild1 }
                        Types.T_List ds -> wild1
                        Types.T_Unknown -> Types.T_EmptyList
                        Types.T_Any -> Types.T_Any }
                   Types.T_Unknown -> Types.T_Unknown }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fOrdType_$cmin :: Types.Type -> Types.Type -> Types.Type
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Types.Type) (y :: Types.Type) ->
                 case x of wild {
                   DEFAULT
                   -> case y of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT
                                  -> case Types.$fEqBind_$c==1 wild2 wild3 of wild4 {
                                       GHC.Types.False -> wild3 GHC.Types.True -> wild2 }
                                  Types.T_Any -> wild2 }
                             Types.T_Any -> Types.T_Any }
                        Types.T_Unknown -> Types.T_Unknown }
                   Types.T_EmptyList
                   -> case y of wild1 {
                        DEFAULT
                        -> case Types.$fEqBind_$c==1 Types.T_EmptyList wild1 of wild2 {
                             GHC.Types.False -> wild1 GHC.Types.True -> Types.T_EmptyList }
                        Types.T_List ds -> Types.T_EmptyList
                        Types.T_Unknown -> Types.T_Unknown
                        Types.T_Any -> Types.T_EmptyList }
                   Types.T_Unknown -> y }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind :: GHC.Show.Show Types.Bind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Bind
                  Types.$fShowBind_$cshowsPrec
                  Types.$fShowBind_$cshow1
                  Types.$fShowBind_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind1 :: Types.Bind -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowBind_$cshowsPrec Types.$fShowBind2) -}
5a7823d2743a4e3c77862677b7b8e4eb
  $fShowBind2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
94f60b552ae455060d3a8bb1d35adf2d
  $fShowBind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
a4601f043f0b376cae7ac25141e3ef3f
  $fShowBind4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vtype = "#) -}
95134c0cc765f79a146fb7020fd5bb9d
  $fShowBind5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("value = "#) -}
c5fffa51bd1f86316d693afe6231ad72
  $fShowBind6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("identifier = "#) -}
ffe3bcdb508f0875d7cc329d77e92859
  $fShowBind7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bind {"#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshow :: Types.Wrd -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshow1 :: Types.Bind -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Bind) ->
                 Types.$fShowBind_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshowList :: [Types.Bind] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Bind]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Bind Types.$fShowBind1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshowsPrec ::
    GHC.Types.Int -> Types.Bind -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(U,1*U,1*U)>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Bind) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Bind ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec ww1 ww3 ww4 ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowBind_$cshowsPrec1 ::
    GHC.Types.Int -> Types.Type -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc :: GHC.Show.Show Types.Func
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Func
                  Types.$fShowFunc_$cshowsPrec
                  Types.$fShowFunc_$cshow
                  Types.$fShowFunc_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc1 :: Types.Func -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowFunc_$cshowsPrec Types.$fShowBind2) -}
a590975f86371c436ee56fadbf546c64
  $fShowFunc10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc11) -}
fec7a128c405c9c4a5616d248de88642
  $fShowFunc11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Fun "#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc2 :: Types.Op -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (x :: Types.Op) (s :: GHC.Base.String)[OneShot] ->
                 case x of wild {
                   Types.BinOp ds -> GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc7 s
                   Types.UnOp ds -> GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc5 s
                   Types.FuncOp ds
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc3 s }) -}
53c36187a5bc8bda4d08337458c24773
  $fShowFunc3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc4) -}
5c3d50b387ea2d856d6ef521c01b6fc8
  $fShowFunc4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[FuncOp]"#) -}
ed51949c4d7d77cac4e9c55ad151c589
  $fShowFunc5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc6) -}
8ca568655c745ddb23a0ce8d15b06af5
  $fShowFunc6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[UnOp]"#) -}
45a619cf6e1316364f7421064b3bc684
  $fShowFunc7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowFunc8) -}
9250b59ab7b6b77c0727b6751ae8886f
  $fShowFunc8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[BinOp]"#) -}
aed3775169f1f85f58368cc7187ab250
  $fShowFunc9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Operator "#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc_$cshow :: Types.Func -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Func) ->
                 Types.$fShowFunc_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc_$cshowList :: [Types.Func] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Func]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Func Types.$fShowFunc1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunc_$cshowsPrec ::
    GHC.Types.Int -> Types.Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Func) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$cshowsPrec1 ww1 w1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction :: GHC.Show.Show Types.Function
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Function
                  Types.$fShowFunction_$cshowsPrec
                  Types.$fShowFunction_$cshow
                  Types.$fShowFunction_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction1 :: Types.Function -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U)>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowFunction_$cshowsPrec Types.$fShowBind2) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction_$cshow :: Types.Function -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Function) ->
                 Types.$fShowFunction_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction_$cshowList :: [Types.Function] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Function]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Function Types.$fShowFunction1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowFunction_$cshowsPrec ::
    GHC.Types.Int -> Types.Function -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(U,1*U,U)>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Function) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Function ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec2 ww1 ww3 ww4 ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp :: GHC.Show.Show Types.Op
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Op
                  Types.$fShowOp_$cshowsPrec
                  Types.$fShowOp_$cshow
                  Types.$fShowOp_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp_$cshow :: Types.Op -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Op) ->
                 case ds of wild {
                   Types.BinOp ds1 -> Types.$fShowFunc7
                   Types.UnOp ds1 -> Types.$fShowFunc5
                   Types.FuncOp ds1 -> Types.$fShowFunc3 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp_$cshowList :: [Types.Op] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Op]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Op Types.$fShowFunc2 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowOp_$cshowsPrec :: GHC.Types.Int -> Types.Op -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Op) (w2 :: GHC.Base.String) ->
                 Types.$fShowFunc2 w1 w2) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func :: GHC.Show.Show Types.T_Func
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.T_Func
                  Types.$fShowT_Func_$cshowsPrec
                  Types.$fShowT_Func_$cshow
                  Types.$fShowT_Func_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func1 :: Types.T_Func -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowT_Func_$cshowsPrec Types.$fShowBind2) -}
aa2ae05d481b337fbb5bb7f575c7f60f
  $fShowT_Func2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T_Operator "#) -}
6f9a28bb2e4df96ad1a678b5773dce89
  $fShowT_Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("return_t = "#) -}
e896eaf4f90364ecfb26dc4d3dc32e66
  $fShowT_Func4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("args_t = "#) -}
3b042bb9ab2cb9cc47b1500beb322d90
  $fShowT_Func5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T_Function {"#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func_$cshow :: Types.T_Func -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.T_Func) ->
                 Types.$fShowT_Func_$cshowsPrec
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func_$cshowList :: [Types.T_Func] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.T_Func]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.T_Func Types.$fShowT_Func1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowT_Func_$cshowsPrec ::
    GHC.Types.Int -> Types.T_Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.T_Func) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$cshowsPrec3 ww1 w1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType :: GHC.Show.Show Types.Type
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type
                  Types.$fShowBind_$cshowsPrec1
                  Types.$fShowType_$cshow
                  Types.$fShowType_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType1 :: Types.Type -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, False)
                (Types.$fShowBind_$cshowsPrec1 Types.$fShowBind2) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType_$cshow :: Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Type) ->
                 Types.$fShowBind_$cshowsPrec1
                   Types.$fShowBind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowType_$cshowList :: [Types.Type] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Type]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Type Types.$fShowType1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd :: GHC.Show.Show Types.Wrd
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Wrd
                  Types.$fShowWrd_$cshowsPrec
                  Types.$fShowBind_$cshow
                  Types.$fShowWrd_$cshowList -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd1 :: Types.Wrd -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Wrd) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Types.$fShowBind_$cshow x))
                   s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd_$cshowList :: [Types.Wrd] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Types.Wrd]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Types.Wrd Types.$fShowWrd1 ls s) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $fShowWrd_$cshowsPrec ::
    GHC.Types.Int -> Types.Wrd -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int) (x :: Types.Wrd) (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Types.$fShowBind_$cshow x))
                   s) -}
977c61b650d635c4770ec912c6518a8a
  $tc'BinOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6015880260986517920##
                   16280163809749895704##
                   Types.$trModule
                   Types.$tc'BinOp2
                   0#
                   Types.$tc'BinOp1) -}
23a21ce6e422f00e352daf343d978916
  $tc'BinOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2453be85e70690dc0249b74068f0ebfe
  $tc'BinOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'BinOp3) -}
17a9d980bf72d5b9d7af6a5e1869c052
  $tc'BinOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BinOp"#) -}
eaa5d05f3c46b1b1c9667bf28b3281dc
  $tc'Bind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   905725890985166590##
                   5982301043167257467##
                   Types.$trModule
                   Types.$tc'Bind2
                   0#
                   Types.$tc'Bind1) -}
9e0d4e09d3c7ddc63c4a930f39cb38f9
  $tc'Bind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cafb127dc80bc68becb157039c946d06
  $tc'Bind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bind3) -}
e0c69056d6655769f5a839521c6e3a63
  $tc'Bind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bind"#) -}
1ff4a6b0e4a768959ae0c18accb72516
  $tc'Bnd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13462670928313550182##
                   3788395879286105584##
                   Types.$trModule
                   Types.$tc'Bnd2
                   0#
                   Types.$tc'Bnd1) -}
33a9d7fa8db4bf54ce60c3145ecfcb17
  $tc'Bnd1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d87e6f3a9347d3a938a8d9cd0da92c70
  $tc'Bnd2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bnd3) -}
873288b56e0d21b593ccc80011841873
  $tc'Bnd3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bnd"#) -}
667fffa8d32f74b839c1f2f7505390b1
  $tc'Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8628615960431750330##
                   6260131625115277915##
                   Types.$trModule
                   Types.$tc'Bool2
                   0#
                   Types.$tc'Bool1) -}
48be26028c91945edece3f171eb8ce7e
  $tc'Bool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
734a3664629053b225ba965d10c92f2d
  $tc'Bool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bool3) -}
4fe38e896f7856386753b1559e1369f7
  $tc'Bool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bool"#) -}
bd875b02a7e30d6d676f888ea6f52266
  $tc'Contents :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17704272973244702080##
                   17764196043691043238##
                   Types.$trModule
                   Types.$tc'Contents2
                   0#
                   Types.$tc'Contents1) -}
6d7d04f40859ef6a170afd1f5dae8533
  $tc'Contents1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a1c874eec127fcc149e8850c571eea78
  $tc'Contents2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Contents3) -}
186587825cd35c38dc36cc081a58a2cb
  $tc'Contents3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Contents"#) -}
e1e40a0a0907d195d73098cf10551c04
  $tc'Double :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11435271415407178034##
                   7857054183322747807##
                   Types.$trModule
                   Types.$tc'Double2
                   0#
                   Types.$tc'Double1) -}
2db453a3c45c30972e968d8f079e6674
  $tc'Double1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d909f987e2a6af5b6049da89f5765f4f
  $tc'Double2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Double3) -}
88268fbae4a68de108a890dfbed3dbfa
  $tc'Double3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Double"#) -}
4b7efa8076e1efe4f8d6da9d158cf8e7
  $tc'Err :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15324982601386776800##
                   2467311628084232170##
                   Types.$trModule
                   Types.$tc'Err2
                   0#
                   Types.$tc'Err1) -}
7447973d62eb2c4ee3519cba9bcd7b66
  $tc'Err1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b38dbcce934815a8d5540c0bf6ad3824
  $tc'Err2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Err3) -}
93dfec9be53e5af30d9164fedb6916ba
  $tc'Err3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Err"#) -}
d0c66f357dd43529fbd4d90ff8df10c8
  $tc'Fun :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17819113441279016260##
                   2769066126750201674##
                   Types.$trModule
                   Types.$tc'Fun2
                   0#
                   Types.$tc'Fun1) -}
f1f947964010ba21469e9de235ebb186
  $tc'Fun1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4ea72e1235af53fe8a651b36d5fafad0
  $tc'Fun2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Fun3) -}
677f616b201f815fa578765a32a50400
  $tc'Fun3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Fun"#) -}
ebd2720763d46558da7561b585fe2d95
  $tc'Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14331745464510730054##
                   2007563430656067699##
                   Types.$trModule
                   Types.$tc'Func2
                   0#
                   Types.$tc'Func1) -}
c818274072e1ec75875c5d302a4fbbd2
  $tc'Func1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a13e0d116da1b1112d2dcd82e1c4e6ff
  $tc'Func2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Func3) -}
220aa05e341bc4598dcafb1bb9097cdf
  $tc'Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Func"#) -}
c15efa046f1abece05d106a91d244b96
  $tc'FuncOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1482825743404429042##
                   4096580196452191038##
                   Types.$trModule
                   Types.$tc'FuncOp2
                   0#
                   Types.$tc'FuncOp1) -}
c44c8037a87779956e80fa27bd19ff09
  $tc'FuncOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c10175da798f981e265a9705a93316c8
  $tc'FuncOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'FuncOp3) -}
13e8f80c2d6285cb13c671b72538b61a
  $tc'FuncOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FuncOp"#) -}
420807dc29e7d173507796586bae988e
  $tc'Function :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2575662467142521799##
                   5927948232878927306##
                   Types.$trModule
                   Types.$tc'Function2
                   0#
                   Types.$tc'Function1) -}
b643770e58f09af477a88a13f08a5c35
  $tc'Function1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9abe499fd21209c27b6b1739a6b980bf
  $tc'Function2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Function3) -}
91e195c125d34a9b1ae7915efa470a73
  $tc'Function3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Function"#) -}
4a0bc234ce4a278c0cb87876c2a7926a
  $tc'Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5956295868865712181##
                   15584281385755000866##
                   Types.$trModule
                   Types.$tc'Int2
                   0#
                   Types.$tc'Int1) -}
cd23fe7974ede33df8e94f7731332700
  $tc'Int1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0f243630d3d66a230855fe041185dbc7
  $tc'Int2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Int3) -}
2eab4eaec38e83898a2cc3d38de976b1
  $tc'Int3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int"#) -}
91272903f1fcf1243a11625d90e2e674
  $tc'List :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10987121217369508200##
                   16129228708118249748##
                   Types.$trModule
                   Types.$tc'List1
                   0#
                   Types.$tc'Contents1) -}
44c6355a58eeeaa49c153f3ba0fc3acc
  $tc'List1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'List2) -}
5aaab2bafe01f388c3a32887b3b5ed8f
  $tc'List2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'List"#) -}
418f650c174d449c0b719fd79f4345a2
  $tc'M_Normal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18243668382090233946##
                   9859294163234212927##
                   Types.$trModule
                   Types.$tc'M_Normal2
                   0#
                   Types.$tc'M_Normal1) -}
e6dd9f31e2e3668f990a4cf5dc15ed60
  $tc'M_Normal1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
de47ea6c52abf8102f1155fd928fb554
  $tc'M_Normal2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'M_Normal3) -}
585f59fa3905e290ffa6a76f20e1c8ac
  $tc'M_Normal3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'M_Normal"#) -}
e9d511935f9e91dbd7e0a039da7c92d6
  $tc'M_TypeCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15815417160575012709##
                   4227702648409430606##
                   Types.$trModule
                   Types.$tc'M_TypeCheck1
                   0#
                   Types.$tc'M_Normal1) -}
fe505bf687962ec9cf8623e42ba1b43a
  $tc'M_TypeCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'M_TypeCheck2) -}
c294f10afa5ed86e3990757a127bc4a7
  $tc'M_TypeCheck2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'M_TypeCheck"#) -}
57469c10f4cdad07f1f4087f0d9156d6
  $tc'Null :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5370417249391373378##
                   16887846437629105356##
                   Types.$trModule
                   Types.$tc'Null2
                   0#
                   Types.$tc'Null1) -}
59279f21979cae8b606c31ee94407e06
  $tc'Null1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
5915b72e4c4924517d5c7a6d001f516b
  $tc'Null2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Null3) -}
a771f826d431893482659247135e0564
  $tc'Null3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Null"#) -}
364fee84a1288b6722e65deba7236c5e
  $tc'Operator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16329576879834367862##
                   17016153007017304145##
                   Types.$trModule
                   Types.$tc'Operator2
                   0#
                   Types.$tc'Operator1) -}
b2f6ac2c35336205af763fac4b34ad3c
  $tc'Operator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a4c3c7ec32f89be7e6c62261ff648fbc
  $tc'Operator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Operator3) -}
fd52fdc9eea2e4a4208ec755fafc998e
  $tc'Operator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Operator"#) -}
ed48b808c93c73f79dc5e86691aa5dc4
  $tc'Pair :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17870575352713640499##
                   17937338624154297629##
                   Types.$trModule
                   Types.$tc'Pair2
                   0#
                   Types.$tc'Pair1) -}
e7e91740e6d9516b6d8b280dd9d11e65
  $tc'Pair1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6c6badc3de0827528403c64d1dcd3ed3
  $tc'Pair2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Pair3) -}
64ff469fc2af97917edea9335b601672
  $tc'Pair3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Pair"#) -}
ec872dabcdcb6321cd087e719c2417df
  $tc'PreList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1916101203003093720##
                   5062507866515841581##
                   Types.$trModule
                   Types.$tc'PreList2
                   0#
                   Types.$tc'PreList1) -}
bdfc07d3ae2476ad39794a0880754bf4
  $tc'PreList1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
672d33948a7a0b8bc0c1ee356dd33163
  $tc'PreList2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'PreList3) -}
697ccdc90f6adb346dde3aa67f8d59ca
  $tc'PreList3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PreList"#) -}
54137a2d99201ce39eba597a83f57e35
  $tc'Print :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   571661109718605856##
                   17643898912897264064##
                   Types.$trModule
                   Types.$tc'Print1
                   0#
                   Types.$tc'Err1) -}
e6bd481a151f051c3c22a62f59baf598
  $tc'Print1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Print2) -}
e356b88eb0e728c8575d3a2dc79de3f4
  $tc'Print2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Print"#) -}
ecc1df1bcc1b2f709eb2ab27b09889cc
  $tc'Str :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2849484910803134195##
                   15669653076507027821##
                   Types.$trModule
                   Types.$tc'Str1
                   0#
                   Types.$tc'Err1) -}
97eba52083e11056d91980693645483f
  $tc'Str1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Str2) -}
28a404d0de280f02b7e5debca1f9b521
  $tc'Str2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Str"#) -}
5759c75146d729baaeeb186e78a3ee31
  $tc'T_Any :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18246106751779788933##
                   4188317691507999655##
                   Types.$trModule
                   Types.$tc'T_Any2
                   0#
                   Types.$tc'T_Any1) -}
0868577a3c67c2dba39b056df0b83389
  $tc'T_Any1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
8d258fc0119100aa44b2873afabe8fc3
  $tc'T_Any2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Any3) -}
c20307b4a45d3da1096c9ff5655ff892
  $tc'T_Any3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Any"#) -}
4383bd126674ca3f9dc1b08db685ab4c
  $tc'T_BinaryOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4162056918578602287##
                   3106541830650877179##
                   Types.$trModule
                   Types.$tc'T_BinaryOp1
                   0#
                   Types.$tc'T_Any1) -}
b6cc73393a758564d7dff01894268616
  $tc'T_BinaryOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_BinaryOp2) -}
cbb54498164b79689472ca6993d655bd
  $tc'T_BinaryOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_BinaryOp"#) -}
a913aae62071e0005aeed5060d39335e
  $tc'T_Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5789772888182623976##
                   10566131470320075035##
                   Types.$trModule
                   Types.$tc'T_Bool1
                   0#
                   Types.$tc'T_Any1) -}
0d7f6408f2afd6f01cb4afa8cb5a3157
  $tc'T_Bool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Bool2) -}
e757665882d613d09d086a68f59d2092
  $tc'T_Bool2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Bool"#) -}
7b907b2d5deb22814cd20f935e131545
  $tc'T_Double :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8813449188410762040##
                   16179567519023800758##
                   Types.$trModule
                   Types.$tc'T_Double1
                   0#
                   Types.$tc'T_Any1) -}
e21555be4bba4251af36534df8255420
  $tc'T_Double1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Double2) -}
a06249e6c9521ff22d4832609041570e
  $tc'T_Double2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Double"#) -}
fa7a5d554b6995d629c6ac662305f99e
  $tc'T_EmptyList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16872264756723706840##
                   16836371461026484202##
                   Types.$trModule
                   Types.$tc'T_EmptyList1
                   0#
                   Types.$tc'T_Any1) -}
5e2f83b48c3971bb309602fc06928cb0
  $tc'T_EmptyList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_EmptyList2) -}
f69e557f726bed59b29f63a5d82dc0a6
  $tc'T_EmptyList2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_EmptyList"#) -}
984a37c2ba30ee3927fddec61fc98c6d
  $tc'T_Error :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4193257841784578973##
                   4623065719461549352##
                   Types.$trModule
                   Types.$tc'T_Error1
                   0#
                   Types.$tc'T_Any1) -}
a06c995fbd70833f2195f5466df1e38f
  $tc'T_Error1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Error2) -}
522459fa18a909ef0b8995473c607107
  $tc'T_Error2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Error"#) -}
57879b5e6b01bd00cd5cbaeca4f6838f
  $tc'T_Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7502027956019668387##
                   15187094274158574129##
                   Types.$trModule
                   Types.$tc'T_Func2
                   0#
                   Types.$tc'T_Func1) -}
661880ea89df694b78a01a4d71cc79dc
  $tc'T_Func1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1a6f6ec0bec16d76aa72069a2fb0c6a4
  $tc'T_Func2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Func3) -}
c9c6f7d68fd0cd33c5da722e42b08189
  $tc'T_Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Func"#) -}
6de4a18e48419d2c9bef482bd6f9e109
  $tc'T_Function :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1422403100830599288##
                   13277103203279679273##
                   Types.$trModule
                   Types.$tc'T_Function2
                   0#
                   Types.$tc'T_Function1) -}
b33e88b7ba0f85f983d665106e684e5a
  $tc'T_Function1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4d53a9a5748cb137da6b86674a03470a
  $tc'T_Function2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Function3) -}
23833a8e07b5a5d576484046a9072843
  $tc'T_Function3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Function"#) -}
ab1027a2e140388ef95e80c967450ce9
  $tc'T_FunctionOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1513120101894806560##
                   268337108302034253##
                   Types.$trModule
                   Types.$tc'T_FunctionOp1
                   0#
                   Types.$tc'T_Any1) -}
2f6fba629ee194d0ff7429b70ec1625e
  $tc'T_FunctionOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_FunctionOp2) -}
37c3ec3e13edc1a575f1aa5c2b0af2e7
  $tc'T_FunctionOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_FunctionOp"#) -}
c7ed0b93e4524d6b46b578dbcc0dad11
  $tc'T_Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14048120351085997940##
                   17507335936960378620##
                   Types.$trModule
                   Types.$tc'T_Int1
                   0#
                   Types.$tc'T_Any1) -}
3a5ad03492945f7dbd38075bfb0faa78
  $tc'T_Int1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Int2) -}
ad57fc2a6dd7454a729e0abcd2e3ecba
  $tc'T_Int2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Int"#) -}
0e3f6a7566d39119b5db5c341e5364a4
  $tc'T_List :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10714740093169110374##
                   251382634889715181##
                   Types.$trModule
                   Types.$tc'T_List2
                   0#
                   Types.$tc'T_List1) -}
b997f4ee02d49156f2fa1630bc87b08e
  $tc'T_List1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
669ad36923337329af13f2aa3bfa9ace
  $tc'T_List2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_List3) -}
7f3f4d645a09c22b84f8609da73aa464
  $tc'T_List3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_List"#) -}
3e0366abced9c56e48b14517d10fd2e8
  $tc'T_Operator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7912049611309761574##
                   9316407142444618514##
                   Types.$trModule
                   Types.$tc'T_Operator2
                   0#
                   Types.$tc'T_Operator1) -}
936edbe46adc5b4ef203a1580e5f6ff8
  $tc'T_Operator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7e594226a2daaad0ef04ac163812319a
  $tc'T_Operator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Operator3) -}
6c5d0335052a15405b17fd358254133c
  $tc'T_Operator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Operator"#) -}
3e239aa531770e16c22bcad0f4d15630
  $tc'T_PreList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16231326714584408763##
                   14087408133764631055##
                   Types.$trModule
                   Types.$tc'T_PreList1
                   0#
                   Types.$tc'T_Any1) -}
617396655086dacfaf96d23e288d81ff
  $tc'T_PreList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_PreList2) -}
770536ca6eb807cb6472e3a3ca7f0b8c
  $tc'T_PreList2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_PreList"#) -}
13f856db564b50778eab8fecd93ebea1
  $tc'T_Print :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12773741311393936514##
                   17643335695324312716##
                   Types.$trModule
                   Types.$tc'T_Print1
                   0#
                   Types.$tc'T_Any1) -}
d233f4d6bf4f125ea3025a359985c6bf
  $tc'T_Print1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Print2) -}
05f010a418c41eca72b3901cf504e13f
  $tc'T_Print2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Print"#) -}
9b43efa1519e959b629130d0039bc72e
  $tc'T_String :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10251998695798201288##
                   3990652457458907347##
                   Types.$trModule
                   Types.$tc'T_String1
                   0#
                   Types.$tc'T_Any1) -}
6ffe5dae228bcd4a83207ad77ef07560
  $tc'T_String1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_String2) -}
012c0c375d2b76798fe93ae25a7366fd
  $tc'T_String2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_String"#) -}
1c7ebe909ef14d8b0092bf9895d8b6a3
  $tc'T_Tuple :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6638338693540996418##
                   7155228993218640867##
                   Types.$trModule
                   Types.$tc'T_Tuple2
                   0#
                   Types.$tc'T_Tuple1) -}
6ce856e217e7835ec58c7f3712be648c
  $tc'T_Tuple1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ce6c8afdbf99c9d2314ab06d85ff2ec2
  $tc'T_Tuple2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Tuple3) -}
6e6bf8a6803d8026efbe365f0dd45bc6
  $tc'T_Tuple3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Tuple"#) -}
e50625e9cbd318ac244670dffe22b716
  $tc'T_Type :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8313157014912104979##
                   12518322790417991433##
                   Types.$trModule
                   Types.$tc'T_Type1
                   0#
                   Types.$tc'T_Any1) -}
d81ccbd265cf0ad7c28d60dcfaf3e242
  $tc'T_Type1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Type2) -}
3de7cca271155a59efaa66c7d224e12a
  $tc'T_Type2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Type"#) -}
2b44a121457fddbe4404cbbf7153606b
  $tc'T_TypeCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13350578060513742954##
                   7039956555445760548##
                   Types.$trModule
                   Types.$tc'T_TypeCheck1
                   0#
                   Types.$tc'T_Any1) -}
23f707916869edb73022065252dee338
  $tc'T_TypeCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_TypeCheck2) -}
d43e508a646f6f1be35416aa4ef9412f
  $tc'T_TypeCheck2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_TypeCheck"#) -}
21880e893c26efab9a9852f56df23989
  $tc'T_UnaryOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6107437322698980527##
                   8733958163917038473##
                   Types.$trModule
                   Types.$tc'T_UnaryOp1
                   0#
                   Types.$tc'T_Any1) -}
d595ab8286763e3be7984b3c6f6f8341
  $tc'T_UnaryOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_UnaryOp2) -}
91244431d2bd56bf70768da1408715bd
  $tc'T_UnaryOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_UnaryOp"#) -}
8de196fc387d57aa51fe2d476371e206
  $tc'T_Unknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5562059598108177631##
                   8177515453577610499##
                   Types.$trModule
                   Types.$tc'T_Unknown1
                   0#
                   Types.$tc'T_Any1) -}
ec30d58896bceac09761fc6955425bd0
  $tc'T_Unknown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'T_Unknown2) -}
4210eb843c7f875687261e1af7566db4
  $tc'T_Unknown2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T_Unknown"#) -}
3080470dda809a0407e38b1c385ca7b7
  $tc'ToEval :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3668549774954288373##
                   16305579864681745230##
                   Types.$trModule
                   Types.$tc'ToEval1
                   0#
                   Types.$tc'Contents1) -}
21c1630399a4f71d493a5d3d0797e157
  $tc'ToEval1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ToEval2) -}
60c01cd8dc9d4fc7f695f8d6c9f4d0f7
  $tc'ToEval2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ToEval"#) -}
ad601e499e9e5121c7e1ac25ba087969
  $tc'Tobe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7740181517026229752##
                   865118413147965549##
                   Types.$trModule
                   Types.$tc'Tobe1
                   0#
                   Types.$tc'Err1) -}
a9ee1ed59f9cb900eb852764ce88f55c
  $tc'Tobe1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Tobe2) -}
1abfeab58e0eb7ed25ee36a9f2d96ce6
  $tc'Tobe2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tobe"#) -}
31cfbc0b1e5e68b5d18a158ab531925b
  $tc'Tuple :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3285304855784235747##
                   5274458238452499385##
                   Types.$trModule
                   Types.$tc'Tuple1
                   0#
                   Types.$tc'Contents1) -}
7f29a054c2d1e4ebc6e847b085111c8a
  $tc'Tuple1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Tuple2) -}
181a10ca67ee08b545eb9ffa8a7f92f2
  $tc'Tuple2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tuple"#) -}
cedcaba334d6ee84635973e8657d8a23
  $tc'Type :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   271822688257937312##
                   5944374233852313872##
                   Types.$trModule
                   Types.$tc'Type2
                   0#
                   Types.$tc'Type1) -}
41a20cc65c95eb8acddf69f5315b7b01
  $tc'Type1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f6594d40c1dc52f272990713ecdde421
  $tc'Type2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Type3) -}
a97a8833bfd421901ac698b9dddaa883
  $tc'Type3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Type"#) -}
ce9d1ab8571266df016bd5d22747d206
  $tc'TypeCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18227766236198118003##
                   2917413297357613987##
                   Types.$trModule
                   Types.$tc'TypeCheck1
                   0#
                   Types.$tc'Type1) -}
a408cfdd9a01450d91ceaa75daa28333
  $tc'TypeCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'TypeCheck2) -}
88facd0cb7d53fa0a46273a2b445d2c8
  $tc'TypeCheck2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeCheck"#) -}
aa7eb96bd7b3e2637fe25a709204ab22
  $tc'UnOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4181747523952757646##
                   5467055216193090417##
                   Types.$trModule
                   Types.$tc'UnOp2
                   0#
                   Types.$tc'UnOp1) -}
4e5d98eb6d8c78dd041a12231b1f1840
  $tc'UnOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1c9903dd40bc0ca30411083945410e42
  $tc'UnOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'UnOp3) -}
34649266877667cf0f0f4c4d66f3460f
  $tc'UnOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UnOp"#) -}
5aa5536d76883329bb0c8ea2d9c131f4
  $tcBind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13347864396066469870##
                   9029185210157968267##
                   Types.$trModule
                   Types.$tcBind1
                   0#
                   GHC.Types.krep$*) -}
f68eed46abe31d171e9e8678dd87b327
  $tcBind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcBind2) -}
233aaad4e8478c57bf940ae03e64ba5a
  $tcBind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bind"#) -}
47bd7e07a3c1f7d7e7b79a03b641573f
  $tcEvalMode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11370265279165524313##
                   2379217631021330669##
                   Types.$trModule
                   Types.$tcEvalMode1
                   0#
                   GHC.Types.krep$*) -}
044b121961e1ebf0fc749fd18e1eb726
  $tcEvalMode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcEvalMode2) -}
23ba2b8e286259c1ceab16cdad69deb7
  $tcEvalMode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EvalMode"#) -}
a6b70d008cb303458b1e9f023c7fc200
  $tcFunc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2091690470252846508##
                   8602331002649990518##
                   Types.$trModule
                   Types.$tcFunc1
                   0#
                   GHC.Types.krep$*) -}
3160fe2a65fde6e0bf582f2b756fb3ef
  $tcFunc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcFunc2) -}
6eb37c4ceaadda65ae2de72dcf9ceca7
  $tcFunc2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Func"#) -}
492a8b467724462cbd5ff26f662c5f34
  $tcFunction :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   235456010557813009##
                   6669349419494010464##
                   Types.$trModule
                   Types.$tcFunction1
                   0#
                   GHC.Types.krep$*) -}
6093b4ea168fc4682d8aaafd7d8b273e
  $tcFunction1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcFunction2) -}
d135da4fd49cfc097d13f146869e9bf7
  $tcFunction2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Function"#) -}
ed3e4f6a09d041c1142c159fdbaebdda
  $tcOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4518431778985342277##
                   11727720194243735460##
                   Types.$trModule
                   Types.$tcOp1
                   0#
                   GHC.Types.krep$*) -}
1d3330ec706027a00ca8d1cb3e5ac699
  $tcOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcOp2) -}
0ba58804cb6acebdf788b0380053cd3f
  $tcOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Op"#) -}
3f546a8dd7a1b3f667b8408f26d63af0
  $tcT_Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12822367976242272126##
                   2978428006317629224##
                   Types.$trModule
                   Types.$tcT_Func1
                   0#
                   GHC.Types.krep$*) -}
46719605c0c87590f80f3e38a9c46a27
  $tcT_Func1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcT_Func2) -}
2dfc39a8ec64e97303b2a7229c14ebba
  $tcT_Func2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T_Func"#) -}
9ab673e6d0290ba9664d99d1feb02228
  $tcType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7714810659226446728##
                   17121076170857171751##
                   Types.$trModule
                   Types.$tcType1
                   0#
                   GHC.Types.krep$*) -}
5088936650e2e80fc558b22d260addce
  $tcType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcType2) -}
7bfa104129f2004086e102a88d1d6a8e
  $tcType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Type"#) -}
1b96d1c7e064c00e3b6614bba3623716
  $tcWrd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17747612522665387162##
                   11673135252177938117##
                   Types.$trModule
                   Types.$tcWrd1
                   0#
                   GHC.Types.krep$*) -}
a23c4a30b6e3e5fa58f72124b324b967
  $tcWrd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcWrd2) -}
0d7df04f37ef6703fca202fff1d2d258
  $tcWrd2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Wrd"#) -}
d31d6e729fc0eabb5e2ce3314e2aac17
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Types.$trModule3 Types.$trModule1) -}
a06fb36839a776ab78d9d536da8c6782
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$trModule2) -}
b1ba031e18293d488645a8122f642027
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Types"#) -}
268e52265c143f7521d661c57fc8627a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$trModule4) -}
49c2aecd32c5389552945fb259f9e75c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Topos-0.1.0.0-L2hSunVxFDyol1qAzNo2F"#) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$c== ::
    GHC.Base.String
    -> Types.Wrd
    -> Types.Type
    -> GHC.Base.String
    -> Types.Wrd
    -> Types.Type
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: Types.Wrd)
                   (ww2 :: Types.Type)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: Types.Wrd)
                   (ww5 :: Types.Type) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Types.$fEqBind_$c==2 ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> Types.$fEqBind_$c==1 ww2 ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$c==1 ::
    [(Types.Type, GHC.Base.String)]
    -> Types.Type
    -> Types.Exp
    -> [(Types.Type, GHC.Base.String)]
    -> Types.Type
    -> Types.Exp
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: [(Types.Type, GHC.Base.String)])
                   (ww1 :: Types.Type)
                   (ww2 :: Types.Exp)
                   (ww3 :: [(Types.Type, GHC.Base.String)])
                   (ww4 :: Types.Type)
                   (ww5 :: Types.Exp) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Types.Type, GHC.Base.String)
                        Types.$fEqFunction_$s$fEq(,)
                        ww
                        ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case Types.$fEqBind_$c==1 ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> GHC.Classes.$fEq[]_$c==
                             @ Types.Wrd
                             Types.$fEqWrd
                             ww2
                             ww5 } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String -> Types.Wrd -> Types.Type -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: Types.Wrd)
                   (ww3 :: Types.Type) ->
                 let {
                   f4 :: GHC.Base.String -> GHC.Base.String
                   = Types.$fShowBind_$cshowsPrec1 Types.$fShowBind2 ww3
                 } in
                 let {
                   lvl62 :: GHC.Base.String = Types.$fShowBind_$cshow ww2
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Types.$fShowBind7
                       (GHC.CString.unpackAppendCString#
                          Types.$fShowBind6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)3
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Types.$fShowBind5
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            lvl62
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               GHC.Show.showCommaSpace1
                                               (GHC.CString.unpackAppendCString#
                                                  Types.$fShowBind4
                                                  (f4
                                                     (GHC.CString.unpackAppendCString#
                                                        Types.$fShowBind3
                                                        x)))))))))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec1 :: GHC.Prim.Int# -> Types.Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.Func) ->
                 case w of wild {
                   Types.Fun b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww1 { Types.Function ww2 ww3 ww4 ->
                          Types.$w$cshowsPrec2 11# ww2 ww3 ww4 }
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Types.$fShowFunc10 (g x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Types.$fShowFunc10
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   Types.Operator b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Types.$fShowFunc9
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.$fShow(,)4
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.$fShow(,)3
                                  (GHC.Show.showLitString
                                     ww2
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.$fShow(,)3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.showList__1
                                           (GHC.Show.$fShow(,)_$sgo1
                                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)
                                              (\ (w1 :: GHC.Base.String)[OneShot] ->
                                               Types.$fShowFunc2 ww3 w1)
                                              (GHC.Types.[] @ GHC.Show.ShowS)))))) })
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> [(Types.Type, GHC.Base.String)]
    -> Types.Type
    -> Types.Exp
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U><L,U>, Inline: [2] -}
41e7a32a3a97b64b95a9c2dd25716e8f
  $w$cshowsPrec3 :: GHC.Prim.Int# -> Types.T_Func -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.T_Func) ->
                 case w of wild {
                   Types.T_Function b1 b2
                   -> let {
                        f4 :: GHC.Base.String -> GHC.Base.String
                        = Types.$fShowBind_$cshowsPrec1 Types.$fShowBind2 b2
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Types.$fShowT_Func5
                            (GHC.CString.unpackAppendCString#
                               Types.$fShowT_Func4
                               (let {
                                  s :: GHC.Base.String
                                  = GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Types.$fShowT_Func3
                                         (f4
                                            (GHC.CString.unpackAppendCString# Types.$fShowBind3 x)))
                                } in
                                case b1 of wild1 {
                                  [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 s
                                  : x1 xs
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showList__3
                                       (Types.$fShowBind_$cshowsPrec1
                                          Types.$fShowBind2
                                          x1
                                          (let {
                                             lvl62 :: [GHC.Types.Char]
                                             = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 s
                                           } in
                                           letrec {
                                             showl :: [Types.Type] -> GHC.Base.String
                                               {- Arity: 1, Strictness: <S,1*U> -}
                                             = \ (ds2 :: [Types.Type]) ->
                                               case ds2 of wild2 {
                                                 [] -> lvl62
                                                 : y ys
                                                 -> GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      (Types.$fShowBind_$cshowsPrec1
                                                         Types.$fShowBind2
                                                         y
                                                         (showl ys)) }
                                           } in
                                           showl xs)) }))
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }
                   Types.T_Operator b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Types.$fShowT_Func2
                            (case b1 of ww1 { (,) ww2 ww3 ->
                             GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.$fShow(,)4
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.$fShow(,)3
                                  (GHC.Show.showLitString
                                     ww2
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.$fShow(,)3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.showList__1
                                           (GHC.Show.$fShow(,)_$sgo1
                                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)
                                              (\ (w1 :: GHC.Base.String)[OneShot] ->
                                               Types.$fShowFunc2 ww3 w1)
                                              (GHC.Types.[] @ GHC.Show.ShowS)))))) })
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) } }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  type BinaryOp :: *
  type BinaryOp = Types.Wrd -> Types.Wrd -> Types.Wrd
41e7a32a3a97b64b95a9c2dd25716e8f
  type Bind :: *
  data Bind
    = Bind {identifier :: GHC.Base.String,
            value :: Types.Wrd,
            vtype :: Types.Type}
033e148ab2ed3368fa8a91bde533879d
  type EvalMode :: *
  data EvalMode = M_Normal | M_TypeCheck
41e7a32a3a97b64b95a9c2dd25716e8f
  type Exp :: *
  type Exp = [Types.Wrd]
41e7a32a3a97b64b95a9c2dd25716e8f
  type Func :: *
  data Func = Fun Types.Function | Operator Types.StrOp
41e7a32a3a97b64b95a9c2dd25716e8f
  type Function :: *
  data Function
    = Function {args :: [(Types.Type, GHC.Base.String)],
                ret_t :: Types.Type,
                ret :: Types.Exp}
41e7a32a3a97b64b95a9c2dd25716e8f
  type FunctionOp :: *
  type FunctionOp = (GHC.Types.Int, Types.Exp -> Types.Wrd)
41e7a32a3a97b64b95a9c2dd25716e8f
  type Op :: *
  data Op
    = BinOp Types.BinaryOp
    | UnOp Types.UnaryOp
    | FuncOp Types.FunctionOp
41e7a32a3a97b64b95a9c2dd25716e8f
  type StrOp :: *
  type StrOp = (GHC.Base.String, Types.Op)
41e7a32a3a97b64b95a9c2dd25716e8f
  type T_Func :: *
  data T_Func
    = T_Function {args_t :: [Types.Type], return_t :: Types.Type}
    | T_Operator (GHC.Base.String, Types.Op)
41e7a32a3a97b64b95a9c2dd25716e8f
  type Type :: *
  data Type
    = T_Int
    | T_Double
    | T_Bool
    | T_String
    | T_Func Types.T_Func
    | T_UnaryOp
    | T_BinaryOp
    | T_FunctionOp
    | T_PreList
    | T_List Types.Type
    | T_EmptyList
    | T_Tuple [Types.Type]
    | T_Print
    | T_Unknown
    | T_Any
    | T_Type
    | T_Error
    | T_TypeCheck
41e7a32a3a97b64b95a9c2dd25716e8f
  type UnaryOp :: *
  type UnaryOp = Types.Wrd -> Types.Wrd
41e7a32a3a97b64b95a9c2dd25716e8f
  type Wrd :: *
  data Wrd
    = Str GHC.Base.String
    | Func Types.Func
    | Bnd Types.Bind
    | Print GHC.Base.String
    | Tobe GHC.Base.String
    | Double GHC.Types.Double
    | Int GHC.Types.Int
    | Bool GHC.Types.Bool
    | Null
    | List Types.Exp
    | ToEval Types.Exp
    | Err GHC.Base.String
    | Pair (Types.Wrd, Types.Wrd)
    | PreList [Types.Exp]
    | Type Types.Type
    | Contents Types.Exp
    | Tuple Types.Exp
    | TypeCheck Types.Type
41e7a32a3a97b64b95a9c2dd25716e8f
  args :: Types.Function -> [(Types.Type, GHC.Base.String)]
  RecSel Left Types.Function
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Function) ->
                 case ds of wild { Types.Function ds1 ds2 ds3 -> ds1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  args_t :: Types.T_Func -> [Types.Type]
  RecSel Left Types.T_Func
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.T_Func) ->
                 case ds of wild {
                   Types.T_Function ds1 ds2 -> ds1
                   Types.T_Operator ipv -> Types.args_t1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  args_t1 :: [Types.Type]
  {- Strictness: b -}
41e7a32a3a97b64b95a9c2dd25716e8f
  identifier :: Types.Bind -> GHC.Base.String
  RecSel Left Types.Bind
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Bind) ->
                 case ds of wild { Types.Bind ds1 ds2 ds3 -> ds1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  ret :: Types.Function -> Types.Exp
  RecSel Left Types.Function
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Function) ->
                 case ds of wild { Types.Function ds1 ds2 ds3 -> ds3 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  ret_t :: Types.Function -> Types.Type
  RecSel Left Types.Function
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Function) ->
                 case ds of wild { Types.Function ds1 ds2 ds3 -> ds2 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  return_t :: Types.T_Func -> Types.Type
  RecSel Left Types.T_Func
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.T_Func) ->
                 case ds of wild {
                   Types.T_Function ds1 ds2 -> ds2
                   Types.T_Operator ipv -> Types.return_t1 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  return_t1 :: Types.Type
  {- Strictness: b -}
18f0eaa319b737788e6e4d55a60bd643
  typeEq :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Type) (ds1 :: Types.Type) ->
                 case ds of wild {
                   DEFAULT
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             DEFAULT
                             -> case wild1 of wild3 {
                                  DEFAULT -> Types.$fEqBind_$c==1 wild2 wild3
                                  Types.T_Any -> GHC.Types.True }
                             Types.T_Any -> GHC.Types.True }
                        Types.T_Unknown -> GHC.Types.False }
                   Types.T_Unknown -> GHC.Types.False }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  value :: Types.Bind -> Types.Wrd
  RecSel Left Types.Bind
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Bind) ->
                 case ds of wild { Types.Bind ds1 ds2 ds3 -> ds2 }) -}
41e7a32a3a97b64b95a9c2dd25716e8f
  vtype :: Types.Bind -> Types.Type
  RecSel Left Types.Bind
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Types.Bind) ->
                 case ds of wild { Types.Bind ds1 ds2 ds3 -> ds3 }) -}
instance [safe] GHC.Classes.Eq [Types.Bind] = Types.$fEqBind
instance [safe] GHC.Classes.Eq [Types.Function]
  = Types.$fEqFunction
instance [safe] GHC.Classes.Eq [Types.T_Func] = Types.$fEqT_Func
instance [safe] GHC.Classes.Eq [Types.Type] = Types.$fEqType
instance [safe] GHC.Classes.Eq [Types.Wrd] = Types.$fEqWrd
instance [safe] GHC.Classes.Ord [Types.Type] = Types.$fOrdType
instance [safe] GHC.Show.Show [Types.Bind] = Types.$fShowBind
instance [safe] GHC.Show.Show [Types.Func] = Types.$fShowFunc
instance [safe] GHC.Show.Show [Types.Function]
  = Types.$fShowFunction
instance [safe] GHC.Show.Show [Types.Op] = Types.$fShowOp
instance [safe] GHC.Show.Show [Types.T_Func] = Types.$fShowT_Func
instance [safe] GHC.Show.Show [Types.Type] = Types.$fShowType
instance [safe] GHC.Show.Show [Types.Wrd] = Types.$fShowWrd
"SPEC/Types $fEq(,) @ Type @ [Char]" forall (v :: GHC.Classes.Eq
                                                    Types.Type)
                                            (v1 :: GHC.Classes.Eq [GHC.Types.Char]).
  GHC.Classes.$fEq(,) @ Types.Type @ [GHC.Types.Char] v v1
  = Types.$fEqFunction_$s$fEq(,)
"SPEC/Types $fEq(,)_$c/= @ Type @ [Char]" forall ($dEq :: GHC.Classes.Eq
                                                            Types.Type)
                                                 ($dEq1 :: GHC.Classes.Eq [GHC.Types.Char]).
  GHC.Classes.$fEq(,)_$c/= @ Types.Type @ [GHC.Types.Char] $dEq $dEq1
  = Types.$fEqFunction_$s$fEq(,)_$c/=
trusted: safe-inferred
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

